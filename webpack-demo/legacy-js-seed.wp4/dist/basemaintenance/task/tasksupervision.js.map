{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"jQuery\"","webpack:///./src/basemaintenance/task/tasksupervision/TaskSupervisionService.js","webpack:///./src/basemaintenance/task/tasksupervision/DateTimeUtils.js","webpack:///./src/basemaintenance/task/tasksupervision/index.js","webpack:///./src/basemaintenance/task/tasksupervision/TaskSupervisionController.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","jQuery","TaskSupervisionService","_classCallCheck","this","errorMsgPrefix","userId","_this","Error","args","Promise","resolve","reject","$","ajax","url","type","success","crewResponseList","textStatus","jqXHR","error","errorThrown","message","status","_this2","response","defaultStart","Date","startYear","startMonth","startDayOfMonth","startHourInDay","startMinute","defaultEnd","endYear","endMonth","endDayOfMonth","endHourInDay","endMinute","defaultStartEndValues","startDate","formatDate","startTime","formatTime","startTimeZone","startTimezone","validateDateFormat","validateTimeFormat","endDate","endTime","endTimeZone","endTimezone","sucessHandler","failureHandler","_this3","crewId","excludeComplete","showCompleteTasks","searchData","onlyWorkscoped","onlyContainingLabour","assignedToCrewId","minScheduledStartDateTime","startDateTime","maxScheduledStartDateTime","endDateTime","excludeCompleted","taskKeyEncryptionName","workpackageKeyEncryptionName","workLocationKeyEncryptionName","aircraftKeyEncryptionName","labourKeyEncryptionName","ids","contentType","JSON","stringify","taskId","labourRowId","newValue","_this4","scheduledHours","_this5","actualHours","dateStr","match","timeStr","date","getDate","getMonthShortStr","getMonth","getFullYear","getHours","getMinutes","month","DateTimeUtils","hours","decimalHours","Number","isNaN","Math","abs","minutes","round","minute","floor","durationStr","split","totalHours","totalMinutes","TaskSupervisionController","parms","TaskSupervisionController_classCallCheck","service","user","isAllowedToEditActualHours","isAllowedToEditSchedledHours","isAllowedToJobStop","isAllowedToSearch","isAllowedToUnassignSelected","crewsFieldId","startDateWidgetId","startFieldId","endDateWidgetId","endFieldId","showCompleteId","searchButtonId","jobStopButtonId","unassignButtonId","searchResultsId","noSearchResultsMessage","unassignedLabel","laborRowElaspedHoursThreshold","contextPath","trackerImagePath","currentUrlHash","taskDetailsPagePath","taskDetailsPageTaskParm","inventoryDetailsPagePath","inventoryDetailsPageParm","checkDetailsPagePath","checkDetailsPageParm","labourDetailsPagePath","labourDetailsPageParm","defaultShowComplete","pencilImageSrc","table","fakeTable","initShowCompleteTasksWidget","initResultsTable","initSearchButton","initJobStopButton","initUnassignSelectedButton","all","initCrewsWidget","initStartAndEndWidgets","then","results","populateCrewsWidget","setStartAndEndWidgets","performSearch","catch","crewsField","document","getElementById","tagName","getCrewsForUser","validateStartEndWidgetIds","startFieldIds","buildFieldIdsForDateTimeWidget","endFieldIds","setStartEndElemAttrs","validateStartEndElems","startDateElem","disabled","endDateElem","getDefaultStartAndEndDates","checked","listOfLabourAttrs","Tabulator","columns","title","field","sorter","align","width","formatter","formatTaskCell","formatAircraftCell","formatWorkpackageCell","mutator","mutateTechnicianCell","formatTechnicianCell","formatElapsedTimeCell","editor","validator","validateHours","editable","isScheduledHoursCellEditable","cellEdited","handleScheduledHoursEdit","mutateHoursCell","formatScheduledHoursCell","isActualHoursCellEditable","handleActualHoursEdit","formatActualHoursCell","selectable","dataSorted","sorters","rows","some","attr","indexOf","setGroupBy","groupHeader","count","group","taskName","rowSelectionChanged","inWorkCount","unassignSelectedCount","labourRoleStatus","technician","$unassignSelectedButton","groupToggleElement","placeholder","cell","rowData","getRow","getData","createURL","encryptedTaskKey","encryptedAircraftKey","aircraft","encryptedWorkpackageKey","workpackage","path","parm","encryptedKey","label","encodeURIComponent","getValue","addPencilImgage","isActualHourGreaterThanScheduledHours","getElement","classList","add","includes","decimalHoursToDuration","scheduleHours","parseInt","$button","show","click","event","preventDefault","hide","performJobStop","performUnassign","formatDateTime","updateResultsTable","msg","selectedRows","getSelectedRows","selectedIds","Array","_row","handleJobStopResult","crews","find","remove","sort","compareCrewAlphanumerically","select","selectOptions","options","forEach","crew","index","option","createElement","text","id","selectedIndex","a","b","widgetId","dateFieldId","timeFieldId","timeZoneFieldId","startPickerId","startDateWidgetIds","endDateWidgetIds","startTimeElem","startTimeZoneElem","startPickerElem","endTimeElem","endTimeZoneElem","endPickerElem","clearData","addData","setSort","column","dir","dateTimeWidgetId","fieldIds","isFromJobStop","deselect","buildTaskDetailsPageLink","buildInventoryDetailsPageLink","buildCheckDetailsPageLink","isTechnicianToBeHyperlinked","buildLabourDetailsPageLink","labourStage","encryptedLabourKey","durationToHoursDecimal","parseFloat","undefined","updateScheduledHours","updateActualHours","init"],"mappings":"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","file":"basemaintenance/task/tasksupervision.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([287,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = jQuery;","import $ from 'jquery';\r\n\r\nexport default class TaskSupervisionService {\r\n\r\n   constructor() {\r\n      this.errorMsgPrefix = 'Error code =  ';\r\n   }\r\n\r\n   getCrewsForUser(userId) {\r\n\r\n      if ( ! userId ) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n\r\n      const crewListRestEndpoint = '/maintenix/rest/crews';\r\n      const args = {'userId': userId};\r\n\r\n      return new Promise((resolve, reject) => {\r\n         $.ajax({\r\n            url : crewListRestEndpoint,\r\n            type: \"GET\",\r\n            data: args,\r\n            success: (crewResponseList, textStatus, jqXHR) => {\r\n               resolve(crewResponseList);\r\n            },\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   getDefaultStartAndEndDates(userId){\r\n      if ( ! userId ) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n      const currentDateTimeRestEndpoint = '/maintenix/rest/datetime/getCurrent';\r\n      const args = {'userId': userId};\r\n\r\n      return new Promise((resolve, reject) => {\r\n         $.ajax({\r\n            url : currentDateTimeRestEndpoint,\r\n            type: \"GET\",\r\n            data: args,\r\n            success: (response, textStatus, jqXHR) => {\r\n               let defaultStart = new Date(\r\n                     response.startYear,\r\n                     response.startMonth - 1,\r\n                     response.startDayOfMonth,\r\n                     response.startHourInDay,\r\n                     response.startMinute\r\n               );\r\n               let defaultEnd = new Date(\r\n                     response.endYear,\r\n                     response.endMonth - 1,\r\n                     response.endDayOfMonth,\r\n                     response.endHourInDay,\r\n                     response.endMinute\r\n               );\r\n\r\n               let defaultStartEndValues = {};\r\n\r\n               defaultStartEndValues.startDate = this.formatDate(defaultStart);\r\n               defaultStartEndValues.startTime = this.formatTime(defaultStart);\r\n               defaultStartEndValues.startTimeZone = response.startTimezone;\r\n               try {\r\n                  this.validateDateFormat(defaultStartEndValues.startDate);\r\n               } catch (error) {\r\n                  reject('default startDate failed validation: ' + error.message);\r\n               }\r\n               try {\r\n                  this.validateTimeFormat(defaultStartEndValues.startTime);\r\n               } catch (error) {\r\n                  reject('default startTime failed validation: ' + error.message);\r\n               }\r\n\r\n               defaultStartEndValues.endDate = this.formatDate(defaultEnd);\r\n               defaultStartEndValues.endTime = this.formatTime(defaultEnd);\r\n               defaultStartEndValues.endTimeZone = response.endTimezone;\r\n               try {\r\n                  this.validateDateFormat(defaultStartEndValues.endDate);\r\n               } catch (error) {\r\n                  reject('default endDate failed validation: ' + error.message);\r\n               }\r\n               try {\r\n                  this.validateTimeFormat(defaultStartEndValues.endTime);\r\n               } catch (error) {\r\n                  reject('default endTime failed validation: ' + error.message);\r\n               }\r\n\r\n               resolve(defaultStartEndValues);\r\n            },\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   performSearch(args, sucessHandler, failureHandler) {\r\n\r\n      // The crewId is mandatory,\r\n      // if not provided then an empty data set is returned to the success handler.\r\n      if ( !args.crewId ) {\r\n         sucessHandler([]);\r\n         return;\r\n      }\r\n\r\n      let excludeComplete = ((args.showCompleteTasks == true) ? false : true);\r\n\r\n      let searchData = {\r\n         onlyWorkscoped: true,\r\n         onlyContainingLabour: true,\r\n         assignedToCrewId: args.crewId,\r\n         minScheduledStartDateTime: args.startDateTime,\r\n         maxScheduledStartDateTime: args.endDateTime,\r\n         excludeCompleted: excludeComplete,\r\n\r\n         taskKeyEncryptionName: args.taskKeyEncryptionName,\r\n         workpackageKeyEncryptionName: args.workpackageKeyEncryptionName,\r\n         workLocationKeyEncryptionName: args.workLocationKeyEncryptionName,\r\n         aircraftKeyEncryptionName: args.aircraftKeyEncryptionName,\r\n         labourKeyEncryptionName: args.labourKeyEncryptionName\r\n      };\r\n      let listCrewTaskLabourEndpoint = '/maintenix/rest/tasks';\r\n      $.ajax({\r\n         url : listCrewTaskLabourEndpoint,\r\n         data: searchData,\r\n         type: \"GET\",\r\n         success: (response, textStatus, jqXHR) => {\r\n            // The response is a json list of objects generated from:\r\n            //    com.mxi.mx.web.rest.task.TasksResponse\r\n            sucessHandler(response);\r\n         },\r\n         error: (jqXHR, textStatus, errorThrown) => {\r\n            let message = this.errorMsgPrefix + jqXHR.status;\r\n            failureHandler(message);\r\n         }\r\n      });\r\n   }\r\n\r\n   performJobStop(args, sucessHandler, failureHandler) {\r\n      let data = { ids: args };\r\n      let labourEndpoint = '/maintenix/rest/labour/stopByProxy';\r\n      $.ajax({\r\n         url : labourEndpoint,\r\n         type: \"PUT\",\r\n         contentType: 'application/json',\r\n         data: JSON.stringify(data),\r\n         success: (response, textStatus, jqXHR) => {\r\n            sucessHandler(response);\r\n         },\r\n         error: (jqXHR, textStatus, errorThrown) => {\r\n            let message = 'Error code =  ' + jqXHR.status;\r\n            failureHandler(message);\r\n         }\r\n      });\r\n   }\r\n\r\n   performUnassign(args, sucessHandler, failureHandler) {\r\n      let data = { ids: args };\r\n      let labourEndpoint = '/maintenix/rest/labour/unassign';\r\n      $.ajax({\r\n         url : labourEndpoint,\r\n         type: \"PUT\",\r\n         contentType: 'application/json',\r\n         data: JSON.stringify(data),\r\n         success: (response, textStatus, jqXHR) => {\r\n            sucessHandler(response);\r\n         },\r\n         error: (jqXHR, textStatus, errorThrown) => {\r\n            let message = 'Error code =  ' + jqXHR.status;\r\n            failureHandler(message);\r\n         }\r\n      });\r\n   }\r\n\r\n   updateScheduledHours(taskId, labourRowId, newValue) {\r\n      let data = {\r\n            scheduledHours: newValue\r\n      };\r\n      return new Promise((resolve, reject) => {\r\n         $.ajax({\r\n            url : '/maintenix/rest/tasks/' + taskId + '/labours/' + labourRowId,\r\n            type: \"PUT\",\r\n            contentType: 'application/json',\r\n            data: JSON.stringify(data),\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   updateActualHours(taskId, labourRowId, newValue) {\r\n      let data = {\r\n            actualHours: newValue\r\n      };\r\n      return new Promise((resolve, reject) => {\r\n         $.ajax({\r\n            url : '/maintenix/rest/tasks/' + taskId + '/labours/' + labourRowId,\r\n            type: \"PUT\",\r\n            contentType: 'application/json',\r\n            data: JSON.stringify(data),\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   //\r\n   // private methods\r\n   //\r\n\r\n   validateDateFormat(dateStr) {\r\n      if( ! dateStr ) {\r\n         throw new Error('dateStr is mandatory.');\r\n      }\r\n      if (typeof dateStr !== 'string')  {\r\n         throw new Error('dateStr is not a string');\r\n      }\r\n\r\n      // regex example: dd-MMM-yyyy\r\n      const dateFormat = /^(([0-9])|([0-2][0-9])|([3][0-1]))\\-(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)\\-\\d{4}$/;\r\n      const matchArray = dateStr.match(dateFormat);\r\n\r\n      if( matchArray == null ) {\r\n          throw new Error('dateStr has invalid format.');\r\n      }\r\n\r\n      return true;\r\n  }\r\n\r\n   validateTimeFormat(timeStr) {\r\n      if ( ! timeStr ){\r\n         throw new Error('timeStr is mandatory.');\r\n      }\r\n      if (typeof timeStr !== 'string')  {\r\n         throw new Error('timeStr is not a string.');\r\n      }\r\n\r\n      // regex example: hh:mm\r\n      const timeFormat = /^$|^(([01][0-9])|(2[0-3])):[0-5][0-9]$/;\r\n      const matchArray = timeStr.match(timeFormat);\r\n\r\n      if (matchArray == null) {\r\n          throw new Error('timeStr has invalid format.');\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   formatDate(date) {\r\n      let str =\r\n         ((date.getDate() < 10) ? '0' : '') + date.getDate() + '-' +\r\n         this.getMonthShortStr(date.getMonth() + 1) + '-' +\r\n         date.getFullYear();\r\n      return str;\r\n   }\r\n\r\n   formatTime(date) {\r\n      let str =\r\n         ((date.getHours() < 10) ? '0' : '') + date.getHours() + ':' +\r\n         ((date.getMinutes() < 10) ? '0' : '') + date.getMinutes();\r\n      return str;\r\n   }\r\n\r\n   getMonthShortStr(month) {\r\n      if (month === 1) return 'JAN';\r\n      if (month === 2) return 'FEB';\r\n      if (month === 3) return 'MAR';\r\n      if (month === 4) return 'APR';\r\n      if (month === 5) return 'MAY';\r\n      if (month === 6) return 'JUN';\r\n      if (month === 7) return 'JUL';\r\n      if (month === 8) return 'AUG';\r\n      if (month === 9) return 'SEP';\r\n      if (month === 10) return 'OCT';\r\n      if (month === 11) return 'NOV';\r\n      if (month === 12) return 'DEC';\r\n      return \"\";\r\n   }\r\n\r\n}","export default class DateTimeUtils {\r\n\r\n   /*\r\n    * Converts the provided hours in decimal format into the string representation of the hours duration.\r\n    * The duration has the following format hhh:MM (hhh = total hours, MM = minutes within the hour).\r\n    * E.g. '100.5' => '100:30' or 100.5 => '100:30'\r\n    */\r\n   static decimalHoursToDuration(hours) {\r\n      if ( typeof hours == 'string' && hours == '' ) {\r\n         return '';\r\n      }\r\n      let decimalHours = Number(hours);\r\n      if (isNaN(decimalHours)) {\r\n         return undefined;\r\n      }\r\n      decimalHours = Math.abs(decimalHours);\r\n      let minutes = Math.round(decimalHours * 60);\r\n      let minute = minutes % 60;\r\n      if( minute < 10 ) {\r\n         minute = \"0\" + minute;\r\n      }\r\n      let hour = Math.floor( minutes / 60);\r\n      let sign = (hours < 0) ? '-' : '';\r\n\r\n      return sign + hour + \":\" + minute;\r\n   }\r\n\r\n   /*\r\n    * Converts the provided string representation of a duration into the string representation of decimal hours.\r\n    * The duration may be in either of the following formats:\r\n    *  - \"hhh:mmm\" = string containing total hours and total minutes\r\n    *  - \"decimal\" - string representation of a decimal\r\n    *  E.g. '100:30' -> '100.5'\r\n    */\r\n   static durationToHoursDecimal(durationStr) {\r\n      if ( typeof durationStr != 'string' || durationStr === '' ) {\r\n         return undefined;\r\n      }\r\n      let split = durationStr.split(/[.:]/);\r\n      if (split.length > 2) {\r\n         return undefined;\r\n      }\r\n      let totalHours = Number(split[0]);\r\n      let totalMinutes = (split.length > 1) ? Number(split[1]) : 0;\r\n      if (isNaN(totalHours) || isNaN(totalMinutes)) {\r\n         return undefined;\r\n      }\r\n      let hours = totalHours + (totalMinutes / 60);\r\n      return hours;\r\n   }\r\n}","import TaskSupervisionController from './TaskSupervisionController';\r\n\r\nlet controllerParms = {\r\n   user: document.getElementById('idUser').value,\r\n\r\n   isAllowedToSearch: (document.getElementById('idIsAllowedToSearch').value === 'true'),\r\n   isAllowedToJobStop: (document.getElementById('idIsAllowedToJobStop').value === 'true'),\r\n   isAllowedToUnassignSelected: (document.getElementById('idIsAllowedToUnassignSelected').value === 'true'),\r\n   isAllowedToEditSchedledHours: (document.getElementById('idIsAllowedToEditSchedledHours').value === 'true'),\r\n   isAllowedToEditActualHours: (document.getElementById('idIsAllowedToEditActualHours').value === 'true'),\r\n\r\n   crewsFieldId: 'idCrewList',\r\n   startFieldId: 'idStartDateTime',\r\n   endFieldId: 'idEndDateTime',\r\n   showCompleteId: 'idShowComplete',\r\n   searchButtonId: 'idSearchButton',\r\n   jobStopButtonId: 'idJobStopButton',\r\n   unassignButtonId: 'idUnassignSelectedButton',\r\n   searchResultsId: 'idSearchResults',\r\n   noSearchResultsMessage: document.getElementById('idNoSearchResultsMessage').value,\r\n   unassignedLabel: document.getElementById('idUnassignedLabel').value,\r\n   laborRowElaspedHoursThreshold: document.getElementById('idlaborRowElaspedHoursThreshold').value,\r\n\r\n   contextPath: document.getElementById('idContextPath').value,\r\n   trackerImagePath: document.getElementById('idTrackerImagePath').value,\r\n   currentUrlHash: document.getElementById('idCurrentUrlHash').value,\r\n   taskDetailsPagePath: document.getElementById('idTaskDetailsPagePath').value,\r\n   taskDetailsPageTaskParm: document.getElementById('idTaskDetailsPageTaskParm').value,\r\n   inventoryDetailsPagePath: document.getElementById('idInventoryDetailsPagePath').value,\r\n   inventoryDetailsPageParm: document.getElementById('idInventoryDetailsPageParm').value,\r\n   checkDetailsPagePath: document.getElementById('idCheckDetailsPagePath').value,\r\n   checkDetailsPageParm: document.getElementById('idCheckDetailsPageParm').value,\r\n   labourDetailsPagePath: document.getElementById('idLabourDetailsPagePath').value,\r\n   labourDetailsPageParm: document.getElementById('idLabourDetailsPageParm').value\r\n\r\n};\r\n\r\nlet controller = new TaskSupervisionController(controllerParms);\r\ncontroller.init();","import \"@babel/polyfill\";\r\nimport $ from 'jquery';\r\nimport Tabulator from 'tabulator-tables';\r\nimport TaskSupervisionService from './TaskSupervisionService';\r\nimport DateTimeUtils from './DateTimeUtils';\r\n\r\n\r\nexport default class TaskSupervisionController {\r\n\r\n   constructor(parms) {\r\n      this.service = parms.TaskSupervisionService || new TaskSupervisionService();\r\n\r\n      this.user = parms.user;\r\n      this.isAllowedToEditActualHours = parms.isAllowedToEditActualHours;\r\n      this.isAllowedToEditSchedledHours = parms.isAllowedToEditSchedledHours;\r\n      this.isAllowedToJobStop = parms.isAllowedToJobStop;\r\n      this.isAllowedToSearch = parms.isAllowedToSearch;\r\n      this.isAllowedToUnassignSelected = parms.isAllowedToUnassignSelected;\r\n\r\n      this.crewsFieldId = parms.crewsFieldId;\r\n      this.startDateWidgetId = parms.startFieldId;\r\n      this.endDateWidgetId = parms.endFieldId;\r\n      this.showCompleteId = parms.showCompleteId;\r\n      this.searchButtonId = parms.searchButtonId;\r\n      this.jobStopButtonId = parms.jobStopButtonId;\r\n      this.unassignButtonId = parms.unassignButtonId;\r\n      this.searchResultsId = parms.searchResultsId;\r\n      this.noSearchResultsMessage = parms.noSearchResultsMessage;\r\n      this.unassignedLabel = parms.unassignedLabel;\r\n      this.laborRowElaspedHoursThreshold = parms.laborRowElaspedHoursThreshold;\r\n\r\n      this.contextPath = parms.contextPath;\r\n      this.trackerImagePath = parms.trackerImagePath;\r\n      this.currentUrlHash = parms.currentUrlHash;\r\n      //Task Details info\r\n      this.taskDetailsPagePath = parms.taskDetailsPagePath;\r\n      this.taskDetailsPageTaskParm = parms.taskDetailsPageTaskParm;\r\n      //Inventory Details info\r\n      this.inventoryDetailsPagePath = parms.inventoryDetailsPagePath;\r\n      this.inventoryDetailsPageParm = parms.inventoryDetailsPageParm;\r\n      //Work pacakage Details info\r\n      this.checkDetailsPagePath = parms.checkDetailsPagePath;\r\n      this.checkDetailsPageParm = parms.checkDetailsPageParm;\r\n      //labour Details info\r\n      this.labourDetailsPagePath = parms.labourDetailsPagePath;\r\n      this.labourDetailsPageParm = parms.labourDetailsPageParm;\r\n\r\n      this.defaultShowComplete = true;\r\n      this.pencilImageSrc = this.trackerImagePath + '/pencil.gif';\r\n\r\n      // Provided for testing.\r\n      this.table = parms.fakeTable;\r\n   }\r\n\r\n   init() {\r\n      this.initShowCompleteTasksWidget();\r\n      this.initResultsTable();\r\n      this.initSearchButton();\r\n      this.initJobStopButton();\r\n      this.initUnassignSelectedButton();\r\n\r\n      Promise.all([this.initCrewsWidget(), this.initStartAndEndWidgets()]).then((results) => {\r\n         this.populateCrewsWidget(results[0]);\r\n         this.setStartAndEndWidgets(results[1]);\r\n         this.performSearch();\r\n      }).catch((error) => {\r\n         throw new Error(error);\r\n      });\r\n   }\r\n\r\n\r\n   initCrewsWidget() {\r\n      if ( ! this.user ) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n      if ( ! this.crewsFieldId ) {\r\n         throw new Error('crewsFieldId is mandatory');\r\n      }\r\n      let crewsField = document.getElementById(this.crewsFieldId);\r\n      if ( ! crewsField || crewsField.tagName != 'SELECT' ) {\r\n         throw new Error('crewsFieldId must be a SELECT element');\r\n      }\r\n\r\n      return this.service.getCrewsForUser(this.user);\r\n   }\r\n\r\n   initStartAndEndWidgets() {\r\n      if ( ! this.user ) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n      this.validateStartEndWidgetIds();\r\n      let startFieldIds = this.buildFieldIdsForDateTimeWidget(this.startDateWidgetId);\r\n      let endFieldIds = this.buildFieldIdsForDateTimeWidget(this.endDateWidgetId);\r\n      this.setStartEndElemAttrs(startFieldIds, endFieldIds);\r\n      this.validateStartEndElems();\r\n\r\n      // The date fields for the DateTime widgets\r\n      // do not provide sufficient validation so we will disable them.\r\n      this.startDateElem.disabled = true;\r\n      this.endDateElem.disabled = true;\r\n\r\n      return this.service.getDefaultStartAndEndDates(this.user);\r\n   }\r\n\r\n   initShowCompleteTasksWidget() {\r\n      document.getElementById(this.showCompleteId).checked = this.defaultShowComplete;\r\n   }\r\n\r\n   initResultsTable() {\r\n\r\n      // The field names match those in:\r\n      //    com.mxi.mx.web.rest.task.TasksResponse\r\n\r\n      const listOfLabourAttrs = [ 'technician', 'labourSkill', 'labourRoleStatus', 'jobStopReason', 'elapsedHoursMinutes',\r\n         'scheduledHours', 'actualHours'];\r\n\r\n      this.table = new Tabulator(\"#idSearchResults\", {\r\n         columns: [\r\n            {title: 'Line No', field: 'lineNo', sorter: 'number', align: 'center', width: 60},\r\n            {title: 'Task', sorter: 'string', align: 'center', formatter: this.formatTaskCell.bind(this), width: 80},\r\n            {title: 'Task Status', field: 'taskStatus', sorter: 'string', align: 'center', width: 80},\r\n            {title: 'Task Class - Subclass', field: 'taskClassSubclass', sorter: 'string', align: 'center', width: 90},\r\n            {title: 'Task Priority', field: 'taskPriority', sorter: 'string', align: 'center', width: 85},\r\n            {title: 'Aircraft', sorter: 'string', align: 'center', formatter: this.formatAircraftCell.bind(this)},\r\n            {title: 'Work Package',   sorter: 'string', align: 'center',  formatter: this.formatWorkpackageCell.bind(this), width: 130},\r\n            {title: 'Work Location', field: 'workLocation', sorter: 'string', align: 'center', width: 90},\r\n            {title: 'Work Area', field: 'workArea', sorter: 'string', align: 'center', width: 90},\r\n            {title: 'Scheduled Start Date', field: 'simpleFormatScheduledStartDate', sorter: 'string', align: 'center', width: 140},\r\n            {title: 'Actual Start Date', field: 'simpleFormatActualStartDate', sorter: 'string', align: 'center', width: 140},\r\n            {title: 'Technician', field: 'technician', sorter: 'string', align: 'center', width: 105,\r\n               mutator: this.mutateTechnicianCell.bind(this),\r\n               formatter: this.formatTechnicianCell.bind(this)\r\n            },\r\n            {title: 'Skill', field: 'labourSkill', sorter: 'string', align: 'center'},\r\n            {title: 'Labor Row Stage', field: 'labourRoleStatus', sorter: 'string', align: 'center', width: 80},\r\n            {title: 'Job Stop Reason', field: 'jobStopReason', sorter: 'string', align: 'center', width: 80},\r\n            {title: 'Elapsed Time', field: 'elapsedHoursMinutes', sorter: 'string', align: 'center', formatter: this.formatElapsedTimeCell.bind(this), width: 85},\r\n            {title: 'Sched. Hours', field: 'scheduledHours', sorter: 'string', align: 'center', editor: 'input', width: 80,\r\n               validator: ['min: 0', this.validateHours.bind(this)],\r\n               editable: this.isScheduledHoursCellEditable.bind(this),\r\n               cellEdited: this.handleScheduledHoursEdit.bind(this),\r\n               mutator: this.mutateHoursCell.bind(this),\r\n               formatter: this.formatScheduledHoursCell.bind(this)\r\n            },\r\n            {title: 'Actual Hours', field: 'actualHours', sorter: 'string', align: 'center', editor: 'input', width: 80,\r\n               validator: ['min: 0', this.validateHours.bind(this)],\r\n               editable: this.isActualHoursCellEditable.bind(this),\r\n               cellEdited: this.handleActualHoursEdit.bind(this),\r\n               mutator: this.mutateHoursCell.bind(this),\r\n               formatter: this.formatActualHoursCell.bind(this)\r\n            }\r\n         ],\r\n         selectable:true,\r\n         dataSorted: (sorters, rows) => {\r\n            // This check is done as the callback is called before the table has been completely instantiated\r\n            // As a result, an undefined object error message will occur as the setGroupBy is being called on an undefined table\r\n            if (this.table) {\r\n               if(sorters.some((attr) => listOfLabourAttrs.indexOf(attr.field) >= 0)) {\r\n                  this.table.setGroupBy();\r\n               }  else{\r\n                  this.table.setGroupBy(\"taskId\");\r\n               }\r\n            }\r\n         },\r\n         groupHeader: (value, count, data, group) => {\r\n            return data[0].taskName + \"<span style='color:#000; margin-left:10px;'>(\" + count + \" items)</span>\";\r\n         },\r\n         rowSelectionChanged: (data, rows) => {\r\n            var i;\r\n            var inWorkCount = 0;\r\n            let unassignSelectedCount = 0 ;\r\n            for (i in data) {\r\n               if ( data[i].labourRoleStatus === \"IN WORK\") {\r\n                  inWorkCount++;\r\n               }\r\n\r\n               if( (data[i].labourRoleStatus == \"IN WORK\" || data[i].labourRoleStatus == \"ACTV\")  &&\r\n                     data[i].technician != \"Unassigned\" && data[i].actualHours == null){\r\n                     unassignSelectedCount++;\r\n               }\r\n            }\r\n            let $unassignSelectedButton = $('#' + this.unassignButtonId);\r\n            let $button = $('#'+this.jobStopButtonId);\r\n\r\n            $button[0].disabled = !(data.length > 0 && (inWorkCount === data.length));\r\n            $unassignSelectedButton[0].disabled = !(data.length > 0 && (unassignSelectedCount === data.length));\r\n         },\r\n         groupToggleElement: \"header\",\r\n         placeholder: this.noSearchResultsMessage\r\n      });\r\n   }\r\n\r\n   buildTaskDetailsPageLink(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      return this.createURL(\r\n               this.taskDetailsPagePath,\r\n               this.taskDetailsPageTaskParm,\r\n               rowData.encryptedTaskKey,\r\n               rowData.taskName\r\n            );\r\n   }\r\n\r\n   buildInventoryDetailsPageLink(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      return this.createURL(\r\n                this.inventoryDetailsPagePath,\r\n                this.inventoryDetailsPageParm,\r\n                rowData.encryptedAircraftKey,\r\n                rowData.aircraft\r\n            );\r\n   }\r\n\r\n   buildCheckDetailsPageLink(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      return this.createURL(\r\n               this.checkDetailsPagePath,\r\n               this.checkDetailsPageParm,\r\n               rowData.encryptedWorkpackageKey,\r\n               rowData.workpackage\r\n            );\r\n   }\r\n\r\n   createURL(path, parm, encryptedKey, label) {\r\n      let url = this.contextPath + path + '?' + parm + '=' +\r\n      encodeURIComponent(encryptedKey) + '&aReturnToPage=' + this.currentUrlHash;\r\n      return  '<a href=\"' + url + '\">' + label + '</a>';\r\n   }\r\n\r\n   formatScheduledHoursCell(cell) {\r\n      if ( !cell ) {\r\n         return undefined;\r\n      }\r\n      let value = cell.getValue();\r\n      return (this.isScheduledHoursCellEditable(cell)) ? this.addPencilImgage(value) : value;\r\n   }\r\n\r\n   formatActualHoursCell(cell) {\r\n      if ( !cell ) {\r\n         return undefined;\r\n      }\r\n      if (this.isActualHourGreaterThanScheduledHours(cell)) {\r\n         cell.getElement().classList.add(\"highlightActualHoursCell\");\r\n      }\r\n      let value = cell.getValue();\r\n      return (this.isActualHoursCellEditable(cell)) ? this.addPencilImgage(value) : value;\r\n   }\r\n\r\n   addPencilImgage(value) {\r\n      return '<div><span>' + value + '</span>&nbsp<img src=\"' + this.pencilImageSrc + '\"></div>';\r\n   }\r\n\r\n   mutateHoursCell(value) {\r\n      // Convert to duration format if not already (but leave blank alone).\t  \r\n      if ( value && !value.includes(':') ) {\r\n         return DateTimeUtils.decimalHoursToDuration( value );\r\n      }\r\n\t  \r\n      return value;\r\n   }\r\n\r\n   mutateTechnicianCell(value) {\r\n      if ( ! value ) {\r\n         return this.unassignedLabel;\r\n      }\r\n      return value;\r\n   }\r\n\r\n   isActualHourGreaterThanScheduledHours(cell) {\r\n      let actualHours = cell.getValue();\r\n      if(!actualHours){\r\n         return actualHours;\r\n      }\r\n      let scheduleHours = cell.getRow().getData().scheduledHours;\r\n      if(!scheduleHours){\r\n         return undefined;\r\n      }\r\n     return parseInt(actualHours) > parseInt(scheduleHours) ;\r\n   }\r\n\r\n   initSearchButton() {\r\n      let $button = $('#'+this.searchButtonId);\r\n      if (this.isAllowedToSearch) {\r\n         $button.show();\r\n         $button.click((event) => {\r\n            event.preventDefault();\r\n            this.performSearch();\r\n            });\r\n      } else {\r\n         $button.hide();\r\n      }\r\n   }\r\n\r\n   initJobStopButton() {\r\n      let $button = $('#'+this.jobStopButtonId);\r\n      if (this.isAllowedToJobStop) {\r\n         $button.show();\r\n         $button.click((event) => {\r\n            event.preventDefault();\r\n            this.performJobStop();\r\n            });\r\n      } else {\r\n         $button.hide();\r\n      }\r\n   }\r\n\r\n   initUnassignSelectedButton(){\r\n      let $button = $('#' + this.unassignButtonId);\r\n      if(this.isAllowedToUnassignSelected){\r\n         $button[0].disabled = 1 ;\r\n         $button.click((event) => {\r\n            this.performUnassign();\r\n            });\r\n      } else {\r\n         $button.hide();\r\n      }\r\n   }\r\n\r\n   performSearch() {\r\n      if (this.isAllowedToSearch) {\r\n         let args = {\r\n               'crewId': document.getElementById(this.crewsFieldId).value,\r\n               'startDateTime': this.formatDateTime(this.startDateWidgetId),\r\n               'endDateTime': this.formatDateTime(this.endDateWidgetId),\r\n               'showCompleteTasks': document.getElementById(this.showCompleteId).checked,\r\n               'taskKeyEncryptionName': this.taskDetailsPageTaskParm,\r\n               'workpackageKeyEncryptionName': this.checkDetailsPageParm,\r\n               'aircraftKeyEncryptionName': this.inventoryDetailsPageParm,\r\n               \"labourKeyEncryptionName\": this.labourDetailsPageParm\r\n               };\r\n\r\n         this.service.performSearch(\r\n               args,\r\n               this.updateResultsTable.bind(this),\r\n               (msg)=> {throw new Error(msg);}\r\n               );\r\n      }\r\n   }\r\n\r\n   performJobStop() {\r\n      if (this.isAllowedToJobStop) {\r\n         var selectedRows = this.table.getSelectedRows();\r\n         var selectedIds= new Array(selectedRows.length);\r\n         for (var i in selectedRows) {\r\n            selectedIds[i]=selectedRows[i]._row.data.labourRowId;\r\n         }\r\n         this.service.performJobStop(\r\n               selectedIds,\r\n               this.handleJobStopResult.bind(this),\r\n               (msg)=> {throw new Error(msg);}\r\n               );\r\n      }\r\n   }\r\n\r\n   performUnassign(){\r\n\r\n      if (this.isAllowedToUnassignSelected) {\r\n         var selectedRows = this.table.getSelectedRows();\r\n         var selectedIds= new Array(selectedRows.length);\r\n         for (var i in selectedRows) {\r\n            selectedIds[i]=selectedRows[i]._row.data.labourRowId;\r\n         }\r\n        this.service.performUnassign(\r\n               selectedIds,\r\n               this.handleJobStopResult.bind(this),\r\n               (msg)=> {throw new Error(msg);}\r\n               );\r\n      }\r\n   }\r\n\r\n   //\r\n   // private methods\r\n   //\r\n\r\n   // Expect crews to be: [{code,name,id}]\r\n   populateCrewsWidget(crews) {\r\n      // Clear existing options.\r\n      $('#'+this.crewsFieldId).find('option').remove();\r\n\r\n      // Sort the crews.\r\n      crews.sort(this.compareCrewAlphanumerically);\r\n\r\n      // Add provided crews as options, if provided.\r\n      if (crews) {\r\n         let select = document.getElementById(this.crewsFieldId);\r\n         let selectOptions = select.options;\r\n         crews.forEach( (crew, index) => {\r\n            let option = document.createElement(\"option\");\r\n            option.text = crew.label;\r\n            option.value = crew.id;\r\n            selectOptions.add(option);\r\n         });\r\n\r\n         // Set the first crew as the default.\r\n         select.selectedIndex = 0;\r\n      }\r\n   }\r\n\r\n   compareCrewAlphanumerically(a,b) {\r\n      if (a.label < b.label) return -1;\r\n      if (a.label > b.label) return 1;\r\n      return 0;\r\n   }\r\n\r\n   // Expect message to be a string\r\n   handleFailureToGetCrewsForUser(message) {\r\n      throw new Error(message);\r\n   }\r\n\r\n   validateStartEndWidgetIds() {\r\n      if ( ! this.startDateWidgetId )  {\r\n         throw new Error('startFieldId is mandatory');\r\n      }\r\n      if (typeof this.startDateWidgetId !== 'string')  {\r\n         throw new Error('startFieldId is not a string');\r\n      }\r\n      if ( ! this.endDateWidgetId )  {\r\n         throw new Error('endFieldId is mandatory');\r\n      }\r\n      if (typeof this.endDateWidgetId !== 'string')  {\r\n         throw new Error('endFieldId is not a string');\r\n      }\r\n   }\r\n\r\n   buildFieldIdsForDateTimeWidget(widgetId) {\r\n      // These ids were determined by looking at the custom tag DateTimeField\r\n      return {\r\n         dateFieldId: widgetId + '_$DATE$',\r\n         timeFieldId: widgetId + '_$TIME$',\r\n         timeZoneFieldId: widgetId + '_$TIMEZONE_DISPLAY$',\r\n         startPickerId: widgetId + '_SelectBtn'\r\n      };\r\n   }\r\n\r\n   setStartEndElemAttrs(startDateWidgetIds, endDateWidgetIds) {\r\n      this.startDateElem = document.getElementById(startDateWidgetIds.dateFieldId);\r\n      this.startTimeElem = document.getElementById(startDateWidgetIds.timeFieldId);\r\n      this.startTimeZoneElem = document.getElementById(startDateWidgetIds.timeZoneFieldId);\r\n      this.startPickerElem = document.getElementById(startDateWidgetIds.startPickerId);\r\n\r\n      this.endDateElem = document.getElementById(endDateWidgetIds.dateFieldId);\r\n      this.endTimeElem = document.getElementById(endDateWidgetIds.timeFieldId);\r\n      this.endTimeZoneElem = document.getElementById(endDateWidgetIds.timeZoneFieldId);\r\n      this.endPickerElem = document.getElementById(endDateWidgetIds.startPickerId);\r\n   }\r\n\r\n   validateStartEndElems() {\r\n      if( ! this.startDateElem ){\r\n         throw new Error('start date field does not exist in the DOM.');\r\n      }\r\n      if( ! this.startTimeElem ){\r\n         throw new Error('start time field does not exist in the DOM.');\r\n      }\r\n      if( ! this.startTimeZoneElem ){\r\n         throw new Error('start time zone field does not exist in the DOM.');\r\n      }\r\n      if( ! this.startPickerElem ){\r\n         throw new Error('start date picker field does not exist in the DOM.');\r\n      }\r\n\r\n      if( ! this.endDateElem ){\r\n         throw new Error('end date field does not exist in the DOM.');\r\n      }\r\n      if( ! this.endTimeElem ){\r\n         throw new Error('end time field does not exist in the DOM.');\r\n      }\r\n      if( ! this.endTimeZoneElem ){\r\n         throw new Error('end time zone field does not exist in the DOM.');\r\n      }\r\n      if( ! this.endPickerElem ){\r\n         throw new Error('end date picker field does not exist in the DOM.');\r\n      }\r\n   }\r\n\r\n   setStartAndEndWidgets(defaultStartEndValues) {\r\n      this.startDateElem.value = defaultStartEndValues.startDate;\r\n      this.startTimeElem.value = defaultStartEndValues.startTime;\r\n      this.startTimeZoneElem.value = defaultStartEndValues.startTimeZone;\r\n\r\n      this.endDateElem.value = defaultStartEndValues.endDate;\r\n      this.endTimeElem.value = defaultStartEndValues.endTime;\r\n      this.endTimeZoneElem.value = defaultStartEndValues.endTimeZone;\r\n   }\r\n\r\n\r\n   updateResultsTable(response) {\r\n      // The response is a json list of objects generated from:\r\n      //    com.mxi.mx.web.rest.task.CrewTaskLabourResponse\r\n      let addToTop = true;\r\n      this.table.clearData();\r\n      this.table.addData(response, addToTop);\r\n      this.table.setSort([{column: 'lineNo', dir: 'asc'}]);\r\n   }\r\n\r\n\r\n   // Format the date and time to that expected by com.mxi.mx.common.utils.DataTypeUtils\r\n   formatDateTime(dateTimeWidgetId) {\r\n      let fieldIds = this.buildFieldIdsForDateTimeWidget(dateTimeWidgetId);\r\n\r\n      let dateValue = document.getElementById(fieldIds.dateFieldId).value;\r\n      let timeValue = document.getElementById(fieldIds.timeFieldId).value;\r\n\r\n      return dateValue + ' ' + timeValue;\r\n   }\r\n\r\n   isScheduledHoursCellEditable(cell) {\r\n      if (this.isAllowedToEditSchedledHours) {\r\n         let rowData = cell.getRow().getData();\r\n         if (rowData.isFromJobStop && rowData.labourRoleStatus == 'ACTV') {\r\n            return true;\r\n         }\r\n      }\r\n      return false;\r\n   }\r\n\r\n   handleJobStopResult(response) {\r\n      var selectedRows = this.table.getSelectedRows();\r\n      for (var i in selectedRows) {\r\n         selectedRows[i].deselect();\r\n      }\r\n      this.performSearch();\r\n   }\r\n\r\n   isActualHoursCellEditable(cell) {\r\n      if (this.isAllowedToEditActualHours) {\r\n         let rowData = cell.getRow().getData();\r\n         if (rowData.labourRoleStatus == 'COMPLETE' ||\r\n               (rowData.labourRoleStatus == 'IN WORK' && rowData.actualHours  != null ) ) {\r\n            return true;\r\n         }\r\n      }\r\n      return false;\r\n   }\r\n\r\n   formatTaskCell(cell) {\r\n      return this.buildTaskDetailsPageLink(cell);\r\n   }\r\n\r\n   formatAircraftCell(cell) {\r\n      return this.buildInventoryDetailsPageLink(cell);\r\n   }\r\n\r\n   formatWorkpackageCell(cell) {\r\n      return this.buildCheckDetailsPageLink(cell);\r\n   }\r\n\r\n   formatTechnicianCell(cell) {\r\n      if (this.isTechnicianToBeHyperlinked(cell)) {\r\n         return this.buildLabourDetailsPageLink(cell);\r\n      }\r\n      return cell.getValue();\r\n   }\r\n\r\n   isTechnicianToBeHyperlinked(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      if (cell.getValue() == this.unassignedLabel) {\r\n         //When unassigned and historic\r\n         if(rowData.labourStage == 'COMPLETE' ||\r\n               rowData.labourStage == 'CANCEL') {\r\n            return false;\r\n         }\r\n      } else {\r\n         //When assigned and non ACTV\r\n         if (rowData.labourRoleStatus != 'ACTV' ) {\r\n            return false;\r\n         }\r\n      }\r\n      return true;\r\n   }\r\n\r\n   buildLabourDetailsPageLink(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      return this.createURL(\r\n                this.labourDetailsPagePath,\r\n                this.labourDetailsPageParm,\r\n                rowData.encryptedLabourKey,\r\n                cell.getValue());\r\n   }\r\n\r\n\r\n   formatElapsedTimeCell(cell) {\r\n      let value = cell.getValue();\r\n      if (value) {\r\n         let decimalTime = DateTimeUtils.durationToHoursDecimal(value);\r\n         if (decimalTime > parseFloat(this.laborRowElaspedHoursThreshold)) {\r\n            return \"<span class='elapsedTimeExceedsThreshold'>\" + value + \"</span>\";\r\n         }\r\n      }\r\n      return value;\r\n   }\r\n\r\n   validateHours(cell, value) {\r\n      if ( value === undefined || value.length > 7 ) {\r\n         return false;\r\n      }\r\n      // Verify that it can be successfully converted to a decimal.\r\n      return ( ! isNaN(DateTimeUtils.durationToHoursDecimal(value)) );\r\n   }\r\n\r\n   handleScheduledHoursEdit(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      let newValue = DateTimeUtils.durationToHoursDecimal(cell.getValue());\r\n      this.service.updateScheduledHours(\r\n            rowData.taskId,\r\n            rowData.labourRowId,\r\n            newValue);\r\n   }\r\n\r\n   handleActualHoursEdit(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      let newValue = DateTimeUtils.durationToHoursDecimal(cell.getValue());\r\n      this.service.updateActualHours(\r\n            rowData.taskId,\r\n            rowData.labourRowId,\r\n            newValue);\r\n   }\r\n}"],"sourceRoot":""}