{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/basemaintenance/task/tasksupervision/TaskSupervisionController.js","webpack:///./src/basemaintenance/task/tasksupervision/TaskSupervisionService.js","webpack:///./src/basemaintenance/task/tasksupervision/index.js","webpack:///./src/common/util/DateTimeHelper.js","webpack:///./src/common/validation/DateTimeValidator.js"],"names":["TaskSupervisionController","parms","userId","Error","crewsFieldId","crewsField","document","getElementById","tagName","service","TaskSupervisionService","isAllowedToSearch","isAllowedToEditSchedledHours","isAllowedToEditActualHours","startDateWidgetId","startFieldId","endDateWidgetId","endFieldId","showCompleteId","searchButtonId","searchResultsId","noSearchResultsMessage","laborRowElaspedTimeThreshold","defaultShowComplete","isScheduledHoursCellEditable","bind","handleScheduleHoursEdit","handleActualHoursEdit","actualHourCellFormatter","Promise","resolve","reject","initShowCompleteTasksWidget","initResultsTable","initSearchButton","all","initCrewsWidget","initStartAndEndWidgets","then","results","populateCrewsWidget","setStartAndEndWidgets","performSearch","catch","error","getCrewsForUser","validateStartEndWidgetIds","startFieldIds","buildFieldIdsForDateTimeWidget","endFieldIds","setStartEndElemAttrs","validateStartEndElems","exception","console","startDateElem","disabled","endDateElem","getDefaultStartAndEndDates","checked","listOfLabourAttrs","table","Tabulator","columns","title","field","visible","sorter","align","width","headerSort","formatter","isElapsedTimeGreaterThanThreshold","editor","validator","validateHours","editable","cellEdited","isActualHoursCellEditable","dataSorted","sorters","rows","some","attr","indexOf","setGroupBy","groupHeader","value","count","data","group","taskName","groupToggleElement","placeholder","cell","actualHourGreaterThanScheduledHours","getElement","classList","add","time","getValue","actualHours","scheduleHours","getRow","getData","scheduledHours","parseInt","$button","$","show","click","event","preventDefault","hide","args","formatDateTime","response","updateResultsTable","crews","find","remove","sort","compareCrewAlphanumerically","select","selectOptions","options","forEach","crew","index","option","createElement","text","label","id","selectedIndex","a","b","message","widgetId","dateFieldId","timeFieldId","timeZoneFieldId","startPickerId","startDateWidgetIds","endDateWidgetIds","startTimeElem","startTimeZoneElem","startPickerElem","endTimeElem","endTimeZoneElem","endPickerElem","defaultStartEndValues","startDate","startTime","startTimeZone","endDate","endTime","endTimeZone","addToTop","clearData","addData","setSort","column","dir","dateTimeWidgetId","fieldIds","dateValue","timeValue","rowData","isFromJobStop","labourStatus","decimalTime","DateTimeValidator","convertTimeToDecimal","parseFloat","updateScheduledHours","taskId","labourRowId","updateActualHours","errorMsgPrefix","crewListRestEndpoint","ajax","url","type","success","crewResponseList","textStatus","jqXHR","errorThrown","status","currentDateTimeRestEndpoint","defaultStart","Date","startYear","startMonth","startDayOfMonth","startHourInDay","startMinute","defaultEnd","endYear","endMonth","endDayOfMonth","endHourInDay","endMinute","formatDate","formatTime","startTimezone","validateDateFormat","validateTimeFormat","endTimezone","excludeComplete","showCompleteTasks","searchData","onlyWorkscoped","onlyContainingLabour","assignedToCrewId","crewId","minScheduledStartDateTime","startDateTime","maxScheduledStartDateTime","endDateTime","excludeCompleted","listCrewTaskLabourEndpoint","newValue","contentType","JSON","stringify","dateStr","dateFormat","matchArray","match","timeStr","timeFormat","date","hours","getTime","str","getDate","getMonthShortStr","getMonth","getFullYear","getHours","getMinutes","month","controllerParms","controller","init","DateTimeHelper","hoursMinutes","split","minutes","length"],"mappings":"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","file":"basemaintenance/task/tasksupervision.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"basemaintenance/task/tasksupervision\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/basemaintenance/task/tasksupervision/index.js\",\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* global Tabulator */\r\nimport TaskSupervisionService from './TaskSupervisionService';\r\nimport DateTimeValidator from '../../../common/validation/DateTimeValidator';\r\nimport DateTimeHelper from '../../../common/util/DateTimeHelper';\r\n\r\nexport default class TaskSupervisionController {\r\n\r\n   constructor(parms) {\r\n      this.userId = parms.userId;\r\n\r\n      if (!this.userId) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n\r\n      this.crewsFieldId = parms.crewsFieldId;\r\n\r\n      if (!this.crewsFieldId) {\r\n         throw new Error('crewsFieldId is mandatory');\r\n      }\r\n\r\n      let crewsField = document.getElementById(this.crewsFieldId);\r\n      if (!crewsField || crewsField.tagName != 'SELECT') {\r\n         throw new Error('crewsFieldId must be a SELECT element');\r\n      }\r\n\r\n      this.service = parms.TaskSupervisionService || new TaskSupervisionService();\r\n      this.isAllowedToSearch = parms.isAllowedToSearch === 'true';\r\n      this.isAllowedToEditSchedledHours = parms.isAllowedToEditSchedledHours === 'true';\r\n      this.isAllowedToEditActualHours = parms.isAllowedToEditActualHours === 'true';\r\n      this.startDateWidgetId = parms.startFieldId;\r\n      this.endDateWidgetId = parms.endFieldId;\r\n      this.showCompleteId = parms.showCompleteId;\r\n      this.searchButtonId = parms.searchButtonId;\r\n      this.searchResultsId = parms.searchResultsId;\r\n      this.noSearchResultsMessage = parms.noSearchResultsMessage;\r\n      this.laborRowElaspedTimeThreshold = parms.laborRowElaspedTimeThreshold;\r\n\r\n      this.defaultShowComplete = true;\r\n      this.isScheduledHoursCellEditable.bind(this);\r\n      this.handleScheduleHoursEdit.bind(this);\r\n      this.handleActualHoursEdit.bind(this);\r\n      this.actualHourCellFormatter.bind(this);\r\n   }\r\n\r\n   getServiceInstance() {\r\n      return this.service;\r\n   }\r\n\r\n   init() {\r\n      return new Promise((resolve, reject) => {\r\n         this.initShowCompleteTasksWidget();\r\n         this.initResultsTable();\r\n         this.initSearchButton();\r\n\r\n         Promise.all([this.initCrewsWidget(), this.initStartAndEndWidgets()]).then((results) => {\r\n            this.populateCrewsWidget(results[0]);\r\n            this.setStartAndEndWidgets(results[1]);\r\n            this.performSearch().then(() => resolve());\r\n         }).catch((error) => {\r\n            throw new Error(error);\r\n         });\r\n      });\r\n   }\r\n\r\n   initCrewsWidget() {\r\n      return this.service.getCrewsForUser(this.userId);\r\n   }\r\n\r\n   initStartAndEndWidgets() {\r\n      if (!this.userId) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n\r\n      try {\r\n         this.validateStartEndWidgetIds();\r\n         let startFieldIds = this.buildFieldIdsForDateTimeWidget(this.startDateWidgetId);\r\n         let endFieldIds = this.buildFieldIdsForDateTimeWidget(this.endDateWidgetId);\r\n         this.setStartEndElemAttrs(startFieldIds, endFieldIds);\r\n         this.validateStartEndElems();\r\n      }\r\n      catch (exception) {\r\n         console.error(\"initStartAndEndWidgets\", exception);\r\n      }\r\n      // The date fields for the DateTime widgets\r\n      // do not provide sufficient validation so we will disable them.\r\n      this.startDateElem.disabled = true;\r\n      this.endDateElem.disabled = true;\r\n\r\n      return this.service.getDefaultStartAndEndDates(this.userId);\r\n   }\r\n\r\n   initShowCompleteTasksWidget() {\r\n      document.getElementById(this.showCompleteId).checked = this.defaultShowComplete;\r\n   }\r\n\r\n\r\n   initResultsTable() {\r\n      // The field names match those in:\r\n      //    com.mxi.mx.web.rest.task.CrewTaskLabourResponse\r\n      const listOfLabourAttrs = ['technician', 'labourSkill', 'labourStatus', 'jobStopReason', 'elapsedHoursMinutes',\r\n         'scheduledHours', 'actualHours'\r\n      ];\r\n\r\n      // Note: it appears that Tabulator has difficulty if visible:false fields are after other fields,\r\n      // so configure them first.\t  \r\n      this.table = new Tabulator(\"#\" + this.searchResultsId, {\r\n         columns: [\r\n            { title: 'Task Id', field: 'taskId', visible: false },\r\n            { title: 'Labour Row Id', field: 'labourRowId', visible: false },\r\n            { title: 'From Job Stop', field: 'isFromJobStop', visible: false },\r\n            { title: 'Line No', field: 'lineNo', sorter: 'number', align: 'center' },\r\n            { title: 'Task', field: 'taskName', sorter: 'string', align: 'center' },\r\n            { title: 'Task Status', field: 'taskStatus', sorter: 'string', align: 'center' },\r\n            { title: 'Task Class - Subclass', field: 'taskClassSubclass', sorter: 'string', align: 'center' },\r\n            { title: 'Task Priority', field: 'taskPriority', sorter: 'string', align: 'center' },\r\n            { title: 'Aircraft', field: 'aircraft', sorter: 'string', align: 'center' },\r\n            { title: 'Work Package', field: 'workpackage', sorter: 'string', align: 'center' },\r\n            { title: 'Work Location', field: 'workLocation', sorter: 'string', align: 'center' },\r\n            { title: 'Work Area', field: 'workArea', sorter: 'string', align: 'center' },\r\n            { title: 'Scheduled Start Date', field: 'scheduledStartDate', sorter: 'string', align: 'center' },\r\n            { title: 'Actual Start Date', field: 'actualStartDate', sorter: 'string', align: 'center' },\r\n            { field: 'Selected', align: 'center', width: 50, headerSort: false, formatter: () => { return '<input id=\"checkBox\" type=\"checkbox\">'; } },\r\n            { title: 'Technician', field: 'technician', sorter: 'string', align: 'center' },\r\n            { title: 'Skill', field: 'labourSkill', sorter: 'string', align: 'center' },\r\n            { title: 'Labour Row Status', field: 'labourStatus', sorter: 'string', align: 'center' },\r\n            { title: 'Job Stop Reason', field: 'jobStopReason', sorter: 'string', align: 'center' },\r\n            { title: 'Elapsed Time', field: 'elapsedHoursMinutes', sorter: 'string', align: 'center', formatter: this.isElapsedTimeGreaterThanThreshold.bind(this) },\r\n            {\r\n               title: 'Sched. Hours',\r\n               field: 'scheduledHours',\r\n               sorter: 'string',\r\n               align: 'center',\r\n               editor: 'input',\r\n               validator: ['min: 0', this.validateHours],\r\n               editable: this.isScheduledHoursCellEditable,\r\n               cellEdited: this.handleScheduleHoursEdit\r\n            },\r\n            {\r\n               title: 'Actual Hours',\r\n               field: 'actualHours',\r\n               sorter: 'string',\r\n               align: 'center',\r\n               editor: 'input',\r\n               validator: ['min: 0', this.validateHours],\r\n               editable: this.isActualHoursCellEditable,\r\n               cellEdited: this.handleActualHoursEdit,\r\n               formatter: this.actualHourCellFormatter\r\n            }\r\n         ],\r\n         dataSorted: (sorters, rows) => {\r\n            // This check is done as the callback is called before the table has been completely instantiated\r\n            // As a result, an undefined object error message will occur as the setGroupBy is being called on an undefined table\r\n            if (this.table) {\r\n               if (sorters.some((attr) => listOfLabourAttrs.indexOf(attr.field) >= 0)) {\r\n                  this.table.setGroupBy();\r\n               }\r\n               else {\r\n                  this.table.setGroupBy(\"taskId\");\r\n               }\r\n            }\r\n         },\r\n         groupHeader: (value, count, data, group) => {\r\n            return data[0].taskName + \"<span style='color:#000; margin-left:10px;'>(\" + count + \" items)</span>\";\r\n         },\r\n         groupToggleElement: \"header\",\r\n         placeholder: this.noSearchResultsMessage\r\n      });\r\n   }\r\n\r\n\r\n   actualHourCellFormatter(cell) {\r\n\r\n      if (!cell) {\r\n         return cell;\r\n      }\r\n\r\n      if (this.actualHourGreaterThanScheduledHours(cell)) {\r\n         //format cell background to yellow\r\n         cell.getElement().classList.add(\"highlightActualHoursCell\");\r\n      }\r\n\r\n      let time = cell.getValue();\r\n      // Return empty string if Actual Hour value is blank\r\n      // otherwise return Actual Hours value.\r\n      return (time ? time : '');\r\n   }\r\n\r\n   actualHourGreaterThanScheduledHours(cell) {\r\n\r\n      let actualHours = cell.getValue();\r\n      if (!actualHours) {\r\n         return actualHours;\r\n      }\r\n\r\n      let scheduleHours = cell.getRow().getData().scheduledHours;\r\n      if (!scheduleHours) {\r\n         return scheduleHours;\r\n      }\r\n\r\n      return parseInt(actualHours) > parseInt(scheduleHours);\r\n   }\r\n\r\n   initSearchButton() {\r\n      let $button = $('#' + this.searchButtonId);\r\n      if (this.isAllowedToSearch) {\r\n         $button.show();\r\n         $button.click((event) => {\r\n            event.preventDefault();\r\n            this.performSearch();\r\n         });\r\n      }\r\n      else {\r\n         $button.hide();\r\n      }\r\n   }\r\n\r\n   performSearch() {\r\n      return new Promise((resolve, reject) => {\r\n         if (this.isAllowedToSearch) {\r\n            let args = {\r\n               'crewId': document.getElementById(this.crewsFieldId).value,\r\n               'startDateTime': this.formatDateTime(this.startDateWidgetId),\r\n               'endDateTime': this.formatDateTime(this.endDateWidgetId),\r\n               'showCompleteTasks': document.getElementById(this.showCompleteId).checked\r\n            };\r\n            \r\n            return this.service.performSearch(args).then(response => {\r\n               this.updateResultsTable(response);\r\n            });\r\n         } else {\r\n            resolve();\r\n         }\r\n      });\r\n   }\r\n\r\n   //\r\n   // private methods\r\n   //\r\n\r\n   // Expect crews to be: [{code,name,id}]\r\n   populateCrewsWidget(crews) {\r\n      // Clear existing options.\r\n      $('#' + this.crewsFieldId).find('option').remove();\r\n\r\n      // Sort the crews.\r\n      crews.sort(this.compareCrewAlphanumerically);\r\n\r\n      // Add provided crews as options, if provided.\r\n      if (crews) {\r\n         let select = document.getElementById(this.crewsFieldId);\r\n         let selectOptions = select.options;\r\n         crews.forEach((crew, index) => {\r\n            let option = document.createElement(\"option\");\r\n            option.text = crew.label;\r\n            option.value = crew.id;\r\n            selectOptions.add(option);\r\n         });\r\n\r\n         // Set the first crew as the default.\r\n         select.selectedIndex = 0;\r\n      }\r\n   }\r\n\r\n   compareCrewAlphanumerically(a, b) {\r\n      if (a.label < b.label) return -1;\r\n      if (a.label > b.label) return 1;\r\n      return 0;\r\n   }\r\n\r\n   // Expect message to be a string\r\n   handleFailureToGetCrewsForUser(message) {\r\n      throw new Error(message);\r\n   }\r\n\r\n   validateStartEndWidgetIds() {\r\n      if (!this.startDateWidgetId) {\r\n         throw new Error('startFieldId is mandatory');\r\n      }\r\n      if (typeof this.startDateWidgetId !== 'string') {\r\n         throw new Error('startFieldId is not a string');\r\n      }\r\n      if (!this.endDateWidgetId) {\r\n         throw new Error('endFieldId is mandatory');\r\n      }\r\n      if (typeof this.endDateWidgetId !== 'string') {\r\n         throw new Error('endFieldId is not a string');\r\n      }\r\n   }\r\n\r\n   buildFieldIdsForDateTimeWidget(widgetId) {\r\n      // These ids were determined by looking at the custom tag DateTimeField\r\n      return {\r\n         dateFieldId: widgetId + '_$DATE$',\r\n         timeFieldId: widgetId + '_$TIME$',\r\n         timeZoneFieldId: widgetId + '_$TIMEZONE_DISPLAY$',\r\n         startPickerId: widgetId + '_SelectBtn'\r\n      };\r\n   }\r\n\r\n   setStartEndElemAttrs(startDateWidgetIds, endDateWidgetIds) {\r\n      this.startDateElem = document.getElementById(startDateWidgetIds.dateFieldId);\r\n      this.startTimeElem = document.getElementById(startDateWidgetIds.timeFieldId);\r\n      this.startTimeZoneElem = document.getElementById(startDateWidgetIds.timeZoneFieldId);\r\n      this.startPickerElem = document.getElementById(startDateWidgetIds.startPickerId);\r\n\r\n      this.endDateElem = document.getElementById(endDateWidgetIds.dateFieldId);\r\n      this.endTimeElem = document.getElementById(endDateWidgetIds.timeFieldId);\r\n      this.endTimeZoneElem = document.getElementById(endDateWidgetIds.timeZoneFieldId);\r\n      this.endPickerElem = document.getElementById(endDateWidgetIds.startPickerId);\r\n   }\r\n\r\n   validateStartEndElems() {\r\n      if (!this.startDateElem) {\r\n         throw new Error('start date field does not exist in the DOM.');\r\n      }\r\n      if (!this.startTimeElem) {\r\n         throw new Error('start time field does not exist in the DOM.');\r\n      }\r\n      if (!this.startTimeZoneElem) {\r\n         throw new Error('start time zone field does not exist in the DOM.');\r\n      }\r\n      if (!this.startPickerElem) {\r\n         throw new Error('start date picker field does not exist in the DOM.');\r\n      }\r\n\r\n      if (!this.endDateElem) {\r\n         throw new Error('end date field does not exist in the DOM.');\r\n      }\r\n      if (!this.endTimeElem) {\r\n         throw new Error('end time field does not exist in the DOM.');\r\n      }\r\n      if (!this.endTimeZoneElem) {\r\n         throw new Error('end time zone field does not exist in the DOM.');\r\n      }\r\n      if (!this.endPickerElem) {\r\n         throw new Error('end date picker field does not exist in the DOM.');\r\n      }\r\n   }\r\n\r\n   setStartAndEndWidgets(defaultStartEndValues) {\r\n      this.startDateElem.value = defaultStartEndValues.startDate;\r\n      this.startTimeElem.value = defaultStartEndValues.startTime;\r\n      this.startTimeZoneElem.value = defaultStartEndValues.startTimeZone;\r\n\r\n      this.endDateElem.value = defaultStartEndValues.endDate;\r\n      this.endTimeElem.value = defaultStartEndValues.endTime;\r\n      this.endTimeZoneElem.value = defaultStartEndValues.endTimeZone;\r\n   }\r\n\r\n\r\n   updateResultsTable(response) {\r\n      // The response is a json list of objects generated from:\r\n      //    com.mxi.mx.web.rest.task.CrewTaskLabourResponse\r\n      let addToTop = true;\r\n      this.table.clearData();\r\n      this.table.addData(response, addToTop);\r\n      this.table.setSort([{ column: 'lineNo', dir: 'asc' }]);\r\n   }\r\n\r\n\r\n   // Format the date and time to that expected by com.mxi.mx.common.utils.DataTypeUtils\r\n   formatDateTime(dateTimeWidgetId) {\r\n      let fieldIds = this.buildFieldIdsForDateTimeWidget(dateTimeWidgetId);\r\n\r\n      let dateValue = document.getElementById(fieldIds.dateFieldId).value;\r\n      let timeValue = document.getElementById(fieldIds.timeFieldId).value;\r\n\r\n      return dateValue + ' ' + timeValue;\r\n   }\r\n\r\n   isScheduledHoursCellEditable(cell) {\r\n      if (this.isAllowedToEditSchedledHours) {\r\n         let rowData = cell.getRow().getData();\r\n         if (rowData.isFromJobStop && rowData.labourStatus == 'ACTV') {\r\n            return true;\r\n         }\r\n      }\r\n      return false;\r\n   }\r\n\r\n   isActualHoursCellEditable(cell) {\r\n      if (this.isAllowedToEditActualHours) {\r\n         let rowData = cell.getRow().getData();\r\n         if (rowData.labourStatus == 'COMPLETE') {\r\n            return true;\r\n         }\r\n      }\r\n      return false;\r\n   }\r\n\r\n   isElapsedTimeGreaterThanThreshold(cell) {\r\n      let time = cell.getValue();\r\n      if (time) {\r\n         let decimalTime = DateTimeValidator.convertTimeToDecimal(time);\r\n         if (decimalTime > parseFloat(this.laborRowElaspedTimeThreshold)) {\r\n            return \"<span class='elapsedTimeExceedsThreshold'>\" + time + \"</span>\";\r\n         }\r\n      }\r\n\r\n      return time;\r\n   }\r\n\r\n   validateHours(cell, value) {\r\n      return DateTimeValidator.validateHours(value);\r\n   }\r\n\r\n   handleScheduleHoursEdit(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      this.service.updateScheduledHours(\r\n         rowData.taskId,\r\n         rowData.labourRowId,\r\n         cell.getValue());\r\n   }\r\n\r\n   handleActualHoursEdit(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      this.service.updateActualHours(\r\n         rowData.taskId,\r\n         rowData.labourRowId,\r\n         cell.getValue());\r\n   }\r\n}\r\n","import $ from 'jquery';\r\nimport DateTimeHelper from '../../../common/util/DateTimeHelper';\r\n\r\nexport default class TaskSupervisionService {\r\n\r\n   constructor() {\r\n      this.errorMsgPrefix = 'Error code =  ';\r\n   }\r\n\r\n   getCrewsForUser(userId) {\r\n\r\n      if (!userId) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n\r\n      const crewListRestEndpoint = '/maintenix/rest/crews';\r\n      const args = { 'userId': userId };\r\n      return new Promise((resolve, reject) => {\r\n         $.ajax({\r\n            url: crewListRestEndpoint,\r\n            type: \"GET\",\r\n            data: args,\r\n            success: (crewResponseList, textStatus, jqXHR) => {\r\n               resolve(crewResponseList);\r\n            },\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   getDefaultStartAndEndDates(userId) {\r\n      if (!userId) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n\r\n      const currentDateTimeRestEndpoint = '/maintenix/rest/datetime/getCurrent';\r\n      const args = { 'userId': userId };\r\n\r\n      return new Promise((resolve, reject) => {\r\n         $.ajax({\r\n            url: currentDateTimeRestEndpoint,\r\n            type: \"GET\",\r\n            data: args,\r\n            success: (response, textStatus, jqXHR) => {\r\n               let defaultStart = new Date(\r\n                  response.startYear,\r\n                  response.startMonth - 1,\r\n                  response.startDayOfMonth,\r\n                  response.startHourInDay,\r\n                  response.startMinute\r\n               );\r\n               let defaultEnd = new Date(\r\n                  response.endYear,\r\n                  response.endMonth - 1,\r\n                  response.endDayOfMonth,\r\n                  response.endHourInDay,\r\n                  response.endMinute\r\n               );\r\n\r\n               let defaultStartEndValues = {};\r\n               defaultStartEndValues.startDate = this.formatDate(defaultStart);\r\n               defaultStartEndValues.startTime = this.formatTime(defaultStart);\r\n               defaultStartEndValues.startTimeZone = response.startTimezone;\r\n               try {\r\n                  this.validateDateFormat(defaultStartEndValues.startDate);\r\n               }\r\n               catch (error) {\r\n                  reject('default startDate failed validation: ' + error.message);\r\n               }\r\n\r\n               try {\r\n                  this.validateTimeFormat(defaultStartEndValues.startTime);\r\n               }\r\n               catch (error) {\r\n                  reject('default startTime failed validation: ' + error.message);\r\n               }\r\n\r\n               defaultStartEndValues.endDate = this.formatDate(defaultEnd);\r\n               defaultStartEndValues.endTime = this.formatTime(defaultEnd);\r\n               defaultStartEndValues.endTimeZone = response.endTimezone;\r\n               try {\r\n                  this.validateDateFormat(defaultStartEndValues.endDate);\r\n               }\r\n               catch (error) {\r\n                  reject('default endDate failed validation: ' + error.message);\r\n               }\r\n               try {\r\n                  this.validateTimeFormat(defaultStartEndValues.endTime);\r\n               }\r\n               catch (error) {\r\n                  reject('default endTime failed validation: ' + error.message);\r\n               }\r\n\r\n               resolve(defaultStartEndValues);\r\n            },\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   performSearch(args) {\r\n      return new Promise((resolve, reject) => {\r\n         let excludeComplete = ((args.showCompleteTasks == true) ? false : true);\r\n\r\n         let searchData = {\r\n            onlyWorkscoped: true,\r\n            onlyContainingLabour: true,\r\n            assignedToCrewId: args.crewId,\r\n            minScheduledStartDateTime: args.startDateTime,\r\n            maxScheduledStartDateTime: args.endDateTime,\r\n            excludeCompleted: excludeComplete\r\n         };\r\n         \r\n         let listCrewTaskLabourEndpoint = '/maintenix/rest/tasks';\r\n\r\n         $.ajax({\r\n            url: listCrewTaskLabourEndpoint,\r\n            data: searchData,\r\n            type: \"GET\",\r\n            success: (response, textStatus, jqXHR) => {\r\n               // The response is a json list of objects generated from:\r\n               //    com.mxi.mx.web.rest.task.CrewTaskLabourResponse\r\n               resolve(response);\r\n            },\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   // validateHours(value) {\r\n   //    // This is based on the NUMBER(9,5) constraint for\r\n   //    // sched_labour_role.sched_hr and sched_labour_role.actual_hr\r\n   //    let split = value.split('.');\r\n   //    if ( split.length > 0 ) {\r\n   //       if ( split[0].length > 4 ) {\r\n   //          return false;\r\n   //       }\r\n   //       if ( split.length == 2 ) {\r\n   //          if ( split[1].length > 5 ) {\r\n   //             return false;\r\n   //          }\r\n   //       } else if (split.length > 2 ) {\r\n   //          return false;\r\n   //       }\r\n   //    }\r\n   //    return true;\r\n   // }\r\n\r\n   updateScheduledHours(taskId, labourRowId, newValue) {\r\n      let data = {\r\n         scheduledHours: newValue\r\n      };\r\n      $.ajax({\r\n         url: '/maintenix/rest/tasks/' + taskId + '/labours/' + labourRowId,\r\n         type: \"PUT\",\r\n         contentType: 'application/json',\r\n         data: JSON.stringify(data),\r\n         error: (jqXHR, textStatus, errorThrown) => {\r\n            let message = this.errorMsgPrefix + jqXHR.status;\r\n            new Error(message);\r\n         }\r\n      });\r\n   }\r\n\r\n   updateActualHours(taskId, labourRowId, newValue) {\r\n      let data = {\r\n         actualHours: newValue\r\n      };\r\n      $.ajax({\r\n         url: '/maintenix/rest/tasks/' + taskId + '/labours/' + labourRowId,\r\n         type: \"PUT\",\r\n         contentType: 'application/json',\r\n         data: JSON.stringify(data),\r\n         error: (jqXHR, textStatus, errorThrown) => {\r\n            let message = this.errorMsgPrefix + jqXHR.status;\r\n            new Error(message);\r\n         }\r\n      });\r\n   }\r\n\r\n\r\n   //\r\n   // private methods\r\n   //\r\n\r\n   validateDateFormat(dateStr) {\r\n      if (!dateStr) {\r\n         throw new Error('dateStr is mandatory.');\r\n      }\r\n      if (typeof dateStr !== 'string') {\r\n         throw new Error('dateStr is not a string');\r\n      }\r\n\r\n      // regex example: dd-MMM-yyyy\r\n      const dateFormat = /^(([0-9])|([0-2][0-9])|([3][0-1]))\\-(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)\\-\\d{4}$/;\r\n      const matchArray = dateStr.match(dateFormat);\r\n\r\n      if (matchArray == null) {\r\n         throw new Error('dateStr has invalid format.');\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   validateTimeFormat(timeStr) {\r\n      if (!timeStr) {\r\n         throw new Error('timeStr is mandatory.');\r\n      }\r\n      if (typeof timeStr !== 'string') {\r\n         throw new Error('timeStr is not a string.');\r\n      }\r\n\r\n      // regex example: hh:mm\r\n      const timeFormat = /^$|^(([01][0-9])|(2[0-3])):[0-5][0-9]$/;\r\n      const matchArray = timeStr.match(timeFormat);\r\n\r\n      if (matchArray == null) {\r\n         throw new Error('timeStr has invalid format.');\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   addHours(date, hours) {\r\n      return new Date(date.getTime() + (hours * 60 * 60 * 1000));\r\n   }\r\n\r\n   formatDate(date) {\r\n      let str =\r\n         ((date.getDate() < 10) ? '0' : '') + date.getDate() + '-' +\r\n         this.getMonthShortStr(date.getMonth() + 1) + '-' +\r\n         date.getFullYear();\r\n      return str;\r\n   }\r\n\r\n   formatTime(date) {\r\n      let str =\r\n         ((date.getHours() < 10) ? '0' : '') + date.getHours() + ':' +\r\n         ((date.getMinutes() < 10) ? '0' : '') + date.getMinutes();\r\n      return str;\r\n   }\r\n\r\n   getMonthShortStr(month) {\r\n      if (month === 1) return 'JAN';\r\n      if (month === 2) return 'FEB';\r\n      if (month === 3) return 'MAR';\r\n      if (month === 4) return 'APR';\r\n      if (month === 5) return 'MAY';\r\n      if (month === 6) return 'JUN';\r\n      if (month === 7) return 'JUL';\r\n      if (month === 8) return 'AUG';\r\n      if (month === 9) return 'SEP';\r\n      if (month === 10) return 'OCT';\r\n      if (month === 11) return 'NOV';\r\n      if (month === 12) return 'DEC';\r\n      return \"\";\r\n   }\r\n\r\n}\r\n","import TaskSupervisionController from './TaskSupervisionController';\r\n\r\nlet controllerParms = {\r\n   userId: document.getElementById('idUser').value,\r\n   crewsFieldId: 'idCrewList',\r\n   startFieldId: 'idStartDateTime',\r\n};\r\n\r\nlet controller = new TaskSupervisionController(controllerParms);\r\ncontroller.init();","export default class DateTimeHelper {\n\n   constructor() {}\n\n   static addHours(date, hours) {\n      return new Date(date.getTime() + (hours * 60 * 60 * 1000));\n   }\n\n   static formatDate(date) {\n      let str =\n         ((date.getDate() < 10) ? '0' : '') + date.getDate() + '-' +\n         this.getMonthShortStr(date.getMonth() + 1) + '-' +\n         date.getFullYear();\n      return str;\n   }\n\n   static formatTime(date) {\n      let str =\n         ((date.getHours() < 10) ? '0' : '') + date.getHours() + ':' +\n         ((date.getMinutes() < 10) ? '0' : '') + date.getMinutes();\n      return str;\n   }\n\n   // Converts a time in the format hh:mm into its corresponding decimal value\n   static convertTimeToDecimal(time) {\n      let hoursMinutes = time.split(/[.:]/);\n      let hours = parseInt(hoursMinutes[0], 10);\n      let minutes = hoursMinutes[1] ? parseInt(hoursMinutes[1], 10) : 0;\n      return hours + minutes / 60;\n   }\n\n   static getMonthShortStr(month) {\n      if (month === 1) return 'JAN';\n      else if (month === 2) return 'FEB';\n      else if (month === 3) return 'MAR';\n      else if (month === 4) return 'APR';\n      else if (month === 5) return 'MAY';\n      else if (month === 6) return 'JUN';\n      else if (month === 7) return 'JUL';\n      else if (month === 8) return 'AUG';\n      else if (month === 9) return 'SEP';\n      else if (month === 10) return 'OCT';\n      else if (month === 11) return 'NOV';\n      else if (month === 12) return 'DEC';\n      else return \"\";\n   }\n\n}\n","export default class DateTimeValidator {\n\n   constructor() {\n   }\n\n   \n   static validateHours(value) {\n      // This is based on the NUMBER(9,5) constraint for\n      // sched_labour_role.sched_hr and sched_labour_role.actual_hr\n      let split = value.split('.');\n      if ( split.length > 0 ) {\n         if ( split[0].length > 4 ) {\n            return false;\n         }\n         if ( split.length == 2 ) {\n            if ( split[1].length > 5 ) {\n               return false;\n            }\n         } else if (split.length > 2 ) {\n            return false;\n         }\n      }\n      return true;\n   }\n\n  \n   //\n   // private methods\n   //\n\n   static validateDateFormat(dateStr) {\n      if( ! dateStr ) {\n         throw new Error('dateStr is mandatory.');\n      }\n      if (typeof dateStr !== 'string')  {\n         throw new Error('dateStr is not a string');\n      }\n\n      // regex example: dd-MMM-yyyy\n      const dateFormat = /^(([0-9])|([0-2][0-9])|([3][0-1]))\\-(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)\\-\\d{4}$/;\n      const matchArray = dateStr.match(dateFormat);\n\n      if( matchArray == null ) {\n          throw new Error('dateStr has invalid format.');\n      }\n\n      return true;\n  }\n\n   static validateTimeFormat(timeStr) {\n      if( ! timeStr ){\n         throw new Error('timeStr is mandatory.');\n      }\n      if (typeof timeStr !== 'string')  {\n         throw new Error('timeStr is not a string.');\n      }\n\n      // regex example: hh:mm\n      const timeFormat = /^$|^(([01][0-9])|(2[0-3])):[0-5][0-9]$/;\n      const matchArray = timeStr.match(timeFormat);\n\n      if( matchArray == null ) {\n          throw new Error('timeStr has invalid format.');\n      }\n\n      return true;\n   }\n\n}"],"sourceRoot":""}