{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"jQuery\"","webpack:///./src/engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchConfig.js","webpack:///./src/requirementdefinition/followOnTask/followOnTaskDefinitionSearchConfig.js","webpack:///./src/basemaintenance/task/tasksupervision/TaskSupervisionService.js","webpack:///./src/engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchService.js","webpack:///./src/requirementdefinition/followOnTask/followOnTaskDefinitionSearchService.js","webpack:///./src/test_index.js","webpack:///./src sync spec.js$","webpack:///./src/basemaintenance/task/tasksupervision/TaskSupervisionService.spec.js","webpack:///./src/engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchConfig.spec.js","webpack:///./src/engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchService.spec.js","webpack:///./src/requirementdefinition/followOnTask/followOnTaskDefinitionSearchConfig.spec.js","webpack:///./src/requirementdefinition/followOnTask/followOnTaskDefinitionSearchService.spec.js","webpack:///./src/common/validation/DateTimeValidator.js","webpack:///./src/basemaintenance/task/tasksupervision/TaskSupervisionController.js","webpack:///./src/basemaintenance/task/tasksupervision/TaskSupervisionController.spec.js","webpack:///./src/someFeature/featureMath/featureMath.spec.js","webpack:///./src/someFeature/featureMath/featureMath.js","webpack:///./src/engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchController.js","webpack:///./src/engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchController.spec.js","webpack:///./src/requirementdefinition/followOnTask/followOnTaskDefinitionSearchController.js","webpack:///./src/requirementdefinition/followOnTask/followOnTaskDefinitionSearchController.spec.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","jQuery","FollowOnTaskDefinitionSearchConfig","_classCallCheck","this","Array","Error","limit","minLength","TaskSupervisionService","errorMsgPrefix","userId","_this","args","Promise","resolve","reject","$","ajax","url","type","success","crewResponseList","textStatus","jqXHR","error","errorThrown","message","status","_this2","response","defaultStart","Date","startYear","startMonth","startDayOfMonth","startHourInDay","startMinute","defaultEnd","endYear","endMonth","endDayOfMonth","endHourInDay","endMinute","defaultStartEndValues","startDate","formatDate","startTime","formatTime","startTimeZone","startTimezone","validateDateFormat","validateTimeFormat","endDate","endTime","endTimeZone","endTimezone","_this3","excludeComplete","showCompleteTasks","searchData","onlyWorkscoped","onlyContainingLabour","assignedToCrewId","crewId","minScheduledStartDateTime","startDateTime","maxScheduledStartDateTime","endDateTime","excludeCompleted","taskId","labourRowId","newValue","_this4","scheduledHours","contentType","JSON","stringify","_this5","actualHours","dateStr","match","timeStr","date","hours","getTime","getDate","getMonthShortStr","getMonth","getFullYear","getHours","getMinutes","month","FollowOnTaskDefinitionSearchService","taskDefinitions","sort","a","b","compareResult","code","configSlotCode","apiUrl","scope","taskDefinitionsResponse","sortedTaskDefinitions","sortTaskDefinitions","err","testsContext","require","keys","forEach","map","./basemaintenance/task/tasksupervision/TaskSupervisionController.spec.js","./basemaintenance/task/tasksupervision/TaskSupervisionService.spec.js","./engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchConfig.spec.js","./engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchController.spec.js","./engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchService.spec.js","./requirementdefinition/followOnTask/followOnTaskDefinitionSearchConfig.spec.js","./requirementdefinition/followOnTask/followOnTaskDefinitionSearchController.spec.js","./requirementdefinition/followOnTask/followOnTaskDefinitionSearchService.spec.js","./someFeature/featureMath/featureMath.spec.js","webpackContext","req","id","webpackContextResolve","e","__webpack_exports__","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","_TaskSupervisionService__WEBPACK_IMPORTED_MODULE_1__","describe","beforeEach","jasmine","Ajax","install","afterEach","uninstall","it","spyOn","and","callFake","ajx","_followOnTaskDefinitionSearchConfig_js__WEBPACK_IMPORTED_MODULE_0__","expect","toThrowError","config","toBe","_followOnTaskDefinitionSearchService_js__WEBPACK_IMPORTED_MODULE_1__","taskDefinitionResponse","beforeAll","service","sortedData","getFollowOnTaskDefinitions","toThrow","then","fakeData","toEqual","DateTimeValidator","split","TaskSupervisionController","parms","TaskSupervisionController_classCallCheck","crewsFieldId","crewsField","document","getElementById","tagName","isAllowedToSearch","isAllowedToEditSchedledHours","isAllowedToEditActualHours","startDateWidgetId","startFieldId","endDateWidgetId","endFieldId","showCompleteId","searchButtonId","searchResultsId","noSearchResultsMessage","laborRowElaspedTimeThreshold","defaultShowComplete","isScheduledHoursCellEditable","handleScheduleHoursEdit","handleActualHoursEdit","actualHourCellFormatter","initShowCompleteTasksWidget","initResultsTable","console","initSearchButton","all","initCrewsWidget","initStartAndEndWidgets","results","populateCrewsWidget","setStartAndEndWidgets","performSearch","catch","getCrewsForUser","validateStartEndWidgetIds","startFieldIds","buildFieldIdsForDateTimeWidget","endFieldIds","setStartEndElemAttrs","validateStartEndElems","exception","startDateElem","disabled","endDateElem","getDefaultStartAndEndDates","checked","listOfLabourAttrs","table","Tabulator","columns","title","field","visible","sorter","align","width","headerSort","formatter","isElapsedTimeGreaterThanThreshold","editor","validator","validateHours","editable","cellEdited","isActualHoursCellEditable","dataSorted","sorters","rows","some","attr","indexOf","setGroupBy","groupHeader","count","group","taskName","groupToggleElement","placeholder","cell","actualHourGreaterThanScheduledHours","getElement","classList","add","time","getValue","scheduleHours","getRow","getData","parseInt","$button","show","click","event","preventDefault","hide","formatDateTime","updateResultsTable","crews","find","remove","compareCrewAlphanumerically","select","selectOptions","options","crew","index","option","createElement","text","label","selectedIndex","widgetId","dateFieldId","timeFieldId","timeZoneFieldId","startPickerId","startDateWidgetIds","endDateWidgetIds","startTimeElem","startTimeZoneElem","startPickerElem","endTimeElem","endTimeZoneElem","endPickerElem","clearData","addData","setSort","column","dir","dateTimeWidgetId","fieldIds","rowData","isFromJobStop","labourStatus","convertTimeToDecimal","parseFloat","updateScheduledHours","updateActualHours","_testCurrentDateTimeR","testCrewList","description","testCurrentDateTimeResponse","_defineProperty","validParms","setFixtures","undefined","done","controller","request","warn","init","x","y","FollowOnTaskDefinitionSearchController","typeAheadId","okButtonId","notFoundMsgId","followOnTaskDefnUuidOuputId","apiUrlId","notFoundMsgEl","okBtnEl","typeAheadSearchInputEl","followOnTaskDefnUuidOuputEl","apiUrlEl","val","selectedOption","keydown","setTimeout","disableOkBtn","clearSelectedTaskDefinition","initialize","suggestion","displayFollowOn","configureTypeAhead","focus","each","displayValue","typeahead","input","highlight","display","emptyTemplate","source","callback","onClick","typeAheadInputEl","selectionEl","selectedRecord","enableOkBtn","setSelectedTaskDefinition","hideLayout","query","suggestionObj","removeClass","removeAttr","addClass","restApiUrl","getGoodController","okButtonEl","fieldFollowOnTaskDefnUuidEl","toHaveText","not","toHaveClass","responseTaskDefinitions","log","nativeEl","calls","mostRecent","toBeFocused"],"mappings":"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","file":"spec-bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([8,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = jQuery;","/* global $ */\r\n/**\r\n * It contains all configurations for the type ahead search widget\r\n */\r\nexport default class FollowOnTaskDefinitionSearchConfig {\r\n\r\n   constructor(data) {\r\n      if (!data || !(data instanceof Array)) {\r\n         throw new Error(\"The response data suppose to be in array form\");\r\n      }\r\n\r\n      this.data = data;\r\n\r\n      // The name of the dataset.\r\n      // This will be appended to the class name of the filtered result <div>.\r\n      this.name = 'followOnTaskDefnSearch';\r\n\r\n      // The max number of suggestions to be displayed.\r\n      this.limit = 50;\r\n\r\n      // The minimum character length needed before suggestions start getting rendered.\r\n      this.minLength = 1;\r\n   }\r\n}\r\n","/* global $ */\r\n/**\r\n * It contains all configurations for the type ahead search widget\r\n */\r\nexport default class FollowOnTaskDefinitionSearchConfig {\r\n\r\n   constructor(data) {\r\n      if (!data || !(data instanceof Array)) {\r\n         throw new Error(\"The response data suppose to be in array form\");\r\n      }\r\n\r\n      this.data = data;\r\n\r\n      // The name of the dataset.\r\n      // This will be appended to the class name of the filtered result <div>.\r\n      this.name = 'followOnTaskDefnSearch';\r\n\r\n      // The max number of suggestions to be displayed.\r\n      this.limit = 50;\r\n\r\n      // The minimum character length needed before suggestions start getting rendered.\r\n      this.minLength = 1;\r\n   }\r\n}\r\n","import $ from 'jquery';\r\nimport DateTimeHelper from '../../../common/util/DateTimeHelper';\r\n\r\nexport default class TaskSupervisionService {\r\n\r\n   constructor() {\r\n      this.errorMsgPrefix = 'Error code =  ';\r\n   }\r\n\r\n   getCrewsForUser(userId) {\r\n\r\n      if (!userId) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n\r\n      const crewListRestEndpoint = '/maintenix/rest/crews';\r\n      const args = { 'userId': userId };\r\n      return new Promise((resolve, reject) => {\r\n         $.ajax({\r\n            url: crewListRestEndpoint,\r\n            type: \"GET\",\r\n            data: args,\r\n            success: (crewResponseList, textStatus, jqXHR) => {\r\n               resolve(crewResponseList);\r\n            },\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   getDefaultStartAndEndDates(userId) {\r\n      if (!userId) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n\r\n      const currentDateTimeRestEndpoint = '/maintenix/rest/datetime/getCurrent';\r\n      const args = { 'userId': userId };\r\n\r\n      return new Promise((resolve, reject) => {\r\n         $.ajax({\r\n            url: currentDateTimeRestEndpoint,\r\n            type: \"GET\",\r\n            data: args,\r\n            success: (response, textStatus, jqXHR) => {\r\n               let defaultStart = new Date(\r\n                  response.startYear,\r\n                  response.startMonth - 1,\r\n                  response.startDayOfMonth,\r\n                  response.startHourInDay,\r\n                  response.startMinute\r\n               );\r\n               let defaultEnd = new Date(\r\n                  response.endYear,\r\n                  response.endMonth - 1,\r\n                  response.endDayOfMonth,\r\n                  response.endHourInDay,\r\n                  response.endMinute\r\n               );\r\n\r\n               let defaultStartEndValues = {};\r\n               defaultStartEndValues.startDate = this.formatDate(defaultStart);\r\n               defaultStartEndValues.startTime = this.formatTime(defaultStart);\r\n               defaultStartEndValues.startTimeZone = response.startTimezone;\r\n               try {\r\n                  this.validateDateFormat(defaultStartEndValues.startDate);\r\n               }\r\n               catch (error) {\r\n                  reject('default startDate failed validation: ' + error.message);\r\n               }\r\n\r\n               try {\r\n                  this.validateTimeFormat(defaultStartEndValues.startTime);\r\n               }\r\n               catch (error) {\r\n                  reject('default startTime failed validation: ' + error.message);\r\n               }\r\n\r\n               defaultStartEndValues.endDate = this.formatDate(defaultEnd);\r\n               defaultStartEndValues.endTime = this.formatTime(defaultEnd);\r\n               defaultStartEndValues.endTimeZone = response.endTimezone;\r\n               try {\r\n                  this.validateDateFormat(defaultStartEndValues.endDate);\r\n               }\r\n               catch (error) {\r\n                  reject('default endDate failed validation: ' + error.message);\r\n               }\r\n               try {\r\n                  this.validateTimeFormat(defaultStartEndValues.endTime);\r\n               }\r\n               catch (error) {\r\n                  reject('default endTime failed validation: ' + error.message);\r\n               }\r\n\r\n               resolve(defaultStartEndValues);\r\n            },\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   performSearch(args) {\r\n      return new Promise((resolve, reject) => {\r\n         let excludeComplete = ((args.showCompleteTasks == true) ? false : true);\r\n\r\n         let searchData = {\r\n            onlyWorkscoped: true,\r\n            onlyContainingLabour: true,\r\n            assignedToCrewId: args.crewId,\r\n            minScheduledStartDateTime: args.startDateTime,\r\n            maxScheduledStartDateTime: args.endDateTime,\r\n            excludeCompleted: excludeComplete\r\n         };\r\n         \r\n         let listCrewTaskLabourEndpoint = '/maintenix/rest/tasks';\r\n\r\n         $.ajax({\r\n            url: listCrewTaskLabourEndpoint,\r\n            data: searchData,\r\n            type: \"GET\",\r\n            success: (response, textStatus, jqXHR) => {\r\n               // The response is a json list of objects generated from:\r\n               //    com.mxi.mx.web.rest.task.CrewTaskLabourResponse\r\n               resolve(response);\r\n            },\r\n            error: (jqXHR, textStatus, errorThrown) => {\r\n               let message = this.errorMsgPrefix + jqXHR.status;\r\n               reject(message);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   // validateHours(value) {\r\n   //    // This is based on the NUMBER(9,5) constraint for\r\n   //    // sched_labour_role.sched_hr and sched_labour_role.actual_hr\r\n   //    let split = value.split('.');\r\n   //    if ( split.length > 0 ) {\r\n   //       if ( split[0].length > 4 ) {\r\n   //          return false;\r\n   //       }\r\n   //       if ( split.length == 2 ) {\r\n   //          if ( split[1].length > 5 ) {\r\n   //             return false;\r\n   //          }\r\n   //       } else if (split.length > 2 ) {\r\n   //          return false;\r\n   //       }\r\n   //    }\r\n   //    return true;\r\n   // }\r\n\r\n   updateScheduledHours(taskId, labourRowId, newValue) {\r\n      let data = {\r\n         scheduledHours: newValue\r\n      };\r\n      $.ajax({\r\n         url: '/maintenix/rest/tasks/' + taskId + '/labours/' + labourRowId,\r\n         type: \"PUT\",\r\n         contentType: 'application/json',\r\n         data: JSON.stringify(data),\r\n         error: (jqXHR, textStatus, errorThrown) => {\r\n            let message = this.errorMsgPrefix + jqXHR.status;\r\n            new Error(message);\r\n         }\r\n      });\r\n   }\r\n\r\n   updateActualHours(taskId, labourRowId, newValue) {\r\n      let data = {\r\n         actualHours: newValue\r\n      };\r\n      $.ajax({\r\n         url: '/maintenix/rest/tasks/' + taskId + '/labours/' + labourRowId,\r\n         type: \"PUT\",\r\n         contentType: 'application/json',\r\n         data: JSON.stringify(data),\r\n         error: (jqXHR, textStatus, errorThrown) => {\r\n            let message = this.errorMsgPrefix + jqXHR.status;\r\n            new Error(message);\r\n         }\r\n      });\r\n   }\r\n\r\n\r\n   //\r\n   // private methods\r\n   //\r\n\r\n   validateDateFormat(dateStr) {\r\n      if (!dateStr) {\r\n         throw new Error('dateStr is mandatory.');\r\n      }\r\n      if (typeof dateStr !== 'string') {\r\n         throw new Error('dateStr is not a string');\r\n      }\r\n\r\n      // regex example: dd-MMM-yyyy\r\n      const dateFormat = /^(([0-9])|([0-2][0-9])|([3][0-1]))\\-(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)\\-\\d{4}$/;\r\n      const matchArray = dateStr.match(dateFormat);\r\n\r\n      if (matchArray == null) {\r\n         throw new Error('dateStr has invalid format.');\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   validateTimeFormat(timeStr) {\r\n      if (!timeStr) {\r\n         throw new Error('timeStr is mandatory.');\r\n      }\r\n      if (typeof timeStr !== 'string') {\r\n         throw new Error('timeStr is not a string.');\r\n      }\r\n\r\n      // regex example: hh:mm\r\n      const timeFormat = /^$|^(([01][0-9])|(2[0-3])):[0-5][0-9]$/;\r\n      const matchArray = timeStr.match(timeFormat);\r\n\r\n      if (matchArray == null) {\r\n         throw new Error('timeStr has invalid format.');\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   addHours(date, hours) {\r\n      return new Date(date.getTime() + (hours * 60 * 60 * 1000));\r\n   }\r\n\r\n   formatDate(date) {\r\n      let str =\r\n         ((date.getDate() < 10) ? '0' : '') + date.getDate() + '-' +\r\n         this.getMonthShortStr(date.getMonth() + 1) + '-' +\r\n         date.getFullYear();\r\n      return str;\r\n   }\r\n\r\n   formatTime(date) {\r\n      let str =\r\n         ((date.getHours() < 10) ? '0' : '') + date.getHours() + ':' +\r\n         ((date.getMinutes() < 10) ? '0' : '') + date.getMinutes();\r\n      return str;\r\n   }\r\n\r\n   getMonthShortStr(month) {\r\n      if (month === 1) return 'JAN';\r\n      if (month === 2) return 'FEB';\r\n      if (month === 3) return 'MAR';\r\n      if (month === 4) return 'APR';\r\n      if (month === 5) return 'MAY';\r\n      if (month === 6) return 'JUN';\r\n      if (month === 7) return 'JUL';\r\n      if (month === 8) return 'AUG';\r\n      if (month === 9) return 'SEP';\r\n      if (month === 10) return 'OCT';\r\n      if (month === 11) return 'NOV';\r\n      if (month === 12) return 'DEC';\r\n      return \"\";\r\n   }\r\n\r\n}\r\n","import $ from 'jquery';\r\n\r\n/**\r\n * The service layer, it sends REST API call and pass the response data to controller\r\n */\r\nexport default class FollowOnTaskDefinitionSearchService {\r\n\r\n   static sortTaskDefinitions(taskDefinitions) {\r\n      if (!taskDefinitions || !(taskDefinitions instanceof Array)) {\r\n         throw new Error(\"taskDefinitions expected to be an Array\");\r\n      }\r\n\r\n      return taskDefinitions.sort(function(a, b) {\r\n         let compareResult = (a.code > b.code) ? 1 : ((a.code < b.code) ? -1 : 0);\r\n\r\n         if (compareResult == 0) {\r\n            compareResult = (a.configSlotCode > b.configSlotCode) ? 1 : ((a.configSlotCode < b.configSlotCode) ? -1 : 0);\r\n         }\r\n\r\n         if (compareResult == 0) {\r\n            compareResult = (a.name > b.name) ? 1 : ((a.name < b.name) ? -1 : 0);\r\n         }\r\n         return compareResult;\r\n      });\r\n   }\r\n\r\n   static getFollowOnTaskDefinitions(apiUrl) {\r\n      let scope = this;\r\n      return new Promise(function(resolve, reject) {\r\n         return $.ajax({\r\n            type: \"GET\",\r\n            url: apiUrl,\r\n            success: function(taskDefinitionsResponse) {\r\n               // nice to have: postProcessor hook\r\n               let sortedTaskDefinitions = scope.sortTaskDefinitions(taskDefinitionsResponse);\r\n               return resolve(sortedTaskDefinitions);\r\n            },\r\n            error: function(err) {\r\n               // if error happens with the API call, initialize the widget with an empty array.\r\n               resolve([]);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n}\r\n","import $ from 'jquery';\r\n\r\n/**\r\n * The service layer, it sends REST API call and pass the response data to controller\r\n */\r\nexport default class FollowOnTaskDefinitionSearchService {\r\n\r\n   static sortTaskDefinitions(taskDefinitions) {\r\n      if (!taskDefinitions || !(taskDefinitions instanceof Array)) {\r\n         throw new Error(\"taskDefinitions expected to be an Array\");\r\n      }\r\n\r\n      return taskDefinitions.sort(function(a, b) {\r\n         let compareResult = (a.code > b.code) ? 1 : ((a.code < b.code) ? -1 : 0);\r\n\r\n         if (compareResult == 0) {\r\n            compareResult = (a.configSlotCode > b.configSlotCode) ? 1 : ((a.configSlotCode < b.configSlotCode) ? -1 : 0);\r\n         }\r\n\r\n         if (compareResult == 0) {\r\n            compareResult = (a.name > b.name) ? 1 : ((a.name < b.name) ? -1 : 0);\r\n         }\r\n         return compareResult;\r\n      });\r\n   }\r\n\r\n   static getFollowOnTaskDefinitions(apiUrl) {\r\n      let scope = this;\r\n      return new Promise(function(resolve, reject) {\r\n         return $.ajax({\r\n            type: \"GET\",\r\n            url: apiUrl,\r\n            success: function(taskDefinitionsResponse) {\r\n               // nice to have: postProcessor hook\r\n               let sortedTaskDefinitions = scope.sortTaskDefinitions(taskDefinitionsResponse);\r\n               return resolve(sortedTaskDefinitions);\r\n            },\r\n            error: function(err) {\r\n               // if error happens with the API call, initialize the widget with an empty array.\r\n               resolve([]);\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n}\r\n","// test_index.js\nvar testsContext = require.context(\".\", true, /spec.js$/);\ntestsContext.keys().forEach(testsContext);","var map = {\n\t\"./basemaintenance/task/tasksupervision/TaskSupervisionController.spec.js\": 15,\n\t\"./basemaintenance/task/tasksupervision/TaskSupervisionService.spec.js\": 10,\n\t\"./engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchConfig.spec.js\": 11,\n\t\"./engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchController.spec.js\": 17,\n\t\"./engineering/requirementdefinition/followOnTask/followOnTaskDefinitionSearchService.spec.js\": 12,\n\t\"./requirementdefinition/followOnTask/followOnTaskDefinitionSearchConfig.spec.js\": 13,\n\t\"./requirementdefinition/followOnTask/followOnTaskDefinitionSearchController.spec.js\": 18,\n\t\"./requirementdefinition/followOnTask/followOnTaskDefinitionSearchService.spec.js\": 14,\n\t\"./someFeature/featureMath/featureMath.spec.js\": 16\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 9;","import $ from 'jquery';\r\nimport TaskSupervisionService from './TaskSupervisionService';\r\n\r\ndescribe('TaskSupervisionService.js', ()=>{\r\n\r\n   describe('getCrewsForUser', ()=>{\r\n\r\n      const service = new TaskSupervisionService();\r\n\r\n      const userId = 'user';\r\n      const successHandler = function(){};\r\n      const failureHandler = function(){};\r\n\r\n      beforeEach(function() {\r\n         jasmine.Ajax.install();\r\n       });\r\n\r\n      afterEach(function() {\r\n         jasmine.Ajax.uninstall();\r\n       });\r\n\t   \r\n\r\n\t   /** \r\n\t   \r\n      it('throws an error when user is not provided', ()=>{\r\n         let undefinedUserId;\r\n         expect(() => service.getCrewsForUser(undefinedUserId, successHandler, failureHandler ))\r\n            .toThrowError('userId is mandatory');\r\n      });\r\n\r\n      it('throws an error when user is blank string', ()=>{\r\n         const blankUserId = '';\r\n         expect(() => service.getCrewsForUser(blankUserId, successHandler, failureHandler ))\r\n            .toThrowError('userId is mandatory');\r\n      });\r\n\r\n      it('throws an error when success handler is not provided', ()=>{\r\n         let undefinedSuccessHandler;\r\n         expect(() => service.getCrewsForUser(userId, undefinedSuccessHandler, failureHandler ))\r\n            .toThrowError('successHandler is mandatory');\r\n      });\r\n\r\n      it('throws an error when success handler is not a function', ()=>{\r\n         const nonFunctionSuccessHandler = 'hello';\r\n         expect(() => service.getCrewsForUser(userId, nonFunctionSuccessHandler, failureHandler ))\r\n            .toThrowError('successHandler must be a function');\r\n      });\r\n\r\n      it('throws an error when failure handler is not provided', ()=>{\r\n         let undefinedFailureHandler;\r\n         expect(() => service.getCrewsForUser(userId, successHandler, undefinedFailureHandler ))\r\n            .toThrowError('failureHandler is mandatory');\r\n      });\r\n\r\n      it('throws an error when failure handler is not a function', ()=>{\r\n         const nonFunctionFailureHandler = 'hello';\r\n         expect(() => service.getCrewsForUser(userId, successHandler, nonFunctionFailureHandler ))\r\n            .toThrowError('failureHandler must be a function');\r\n      });\r\n\r\n      it('will make an ajax call to the correct url', ()=>{\r\n         spyOn($, 'ajax');\r\n         service.getCrewsForUser(userId, successHandler, failureHandler );\r\n         expect($.ajax.calls.mostRecent().args[0].url).toEqual('/maintenix/rest/crew/list');\r\n      });\r\n\r\n      it('will make an ajax call with the correct type', ()=>{\r\n         spyOn($, 'ajax');\r\n         service.getCrewsForUser(userId, successHandler, failureHandler );\r\n         expect($.ajax.calls.mostRecent().args[0].type).toEqual('GET');\r\n      });\r\n\r\n      it('will make an ajax call with the correct data', ()=>{\r\n         spyOn($, 'ajax');\r\n         service.getCrewsForUser(userId, successHandler, failureHandler );\r\n         let expectedData = {'userId': userId};\r\n         expect($.ajax.calls.mostRecent().args[0].data).toEqual(expectedData);\r\n      });\r\n\t  **/\r\n\r\n      it('will call the success handler when the ajax call is successful', ()=>{\r\n         spyOn($, 'ajax').and.callFake( function(ajx) {\r\n            ajx.success({});\r\n         });\r\n\t\t \r\n         /** const spySuccessHandler = jasmine.createSpy('spySuccessHandler');\r\n         service.getCrewsForUser(userId, spySuccessHandler, failureHandler );\r\n         expect(spySuccessHandler).toHaveBeenCalled(); **/\r\n\t\t \r\n\t\t \r\n\t\t /**\r\n\t\tvar spySuccessHandler = jasmine.createSpy('success222');\r\n\t\tvar spyFailureHandler = jasmine.createSpy('failure');\r\n\t\tjasmine.Ajax.withMock(function() {\r\n\t\t\tservice.getCrewsForUser(userId, spySuccessHandler, spyFailureHandler );\r\n\t\t\texpect(spySuccessHandler).toHaveBeenCalled();\r\n\t\t}); **/\r\n      });\r\n/**\r\n      it('will call the error handler when the ajax call is unsuccessful', ()=>{\r\n         spyOn($, 'ajax').and.callFake( function(ajx) {\r\n            ajx.error({});\r\n         });\r\n         const spyFailureHandler = jasmine.createSpy('spyFailureHandler');\r\n         service.getCrewsForUser(userId, successHandler, spyFailureHandler );\r\n         expect(spyFailureHandler).toHaveBeenCalled();\r\n      });\r\n**/\r\n\r\n//      it('will call the success handler with empty list when user belongs to no crews', ()=>{\r\n//\r\n//         //\r\n//         // the following test does exercise the behaviour but does not really have anything to\r\n//         // do with the list being returned, the ajax call simply calls the success handler with\r\n//         // whatever data it is provided... see test below as proof\r\n//         //\r\n//         // I think this and the behaviours below are all actually behaviours of the endpoint\r\n//         // and not this service\r\n//         //\r\n//         // so instead of this test, maybe we should just be writing a test to \"expect\" that the\r\n//         // successHandler function is called when the ajax call is successful\r\n//         // (already written above)\r\n//         //\r\n//\r\n//         const expectedResult = 'expected';\r\n//\r\n//         spyOn($, 'ajax').and.callFake( (e) => {\r\n//            return e.success( expectedResult, 'fake textStatus', 'fake jqXHR' );\r\n//         });\r\n//\r\n//         let actualResult;\r\n//         const userId = 'user';\r\n//         const successHandler = function(data){ actualResult = data; };\r\n//         const failureHandler = function(){};\r\n//\r\n//         service.getCrewsForUser(userId, successHandler, failureHandler );\r\n//\r\n//         expect(actualResult).toEqual(expectedResult);\r\n//\r\n//      });\r\n//\r\n//\r\n//\r\n//      it('will call the success handler with the list of crews to which user belongs when the user belongs to all crews', ()=>{\r\n//\r\n//      });\r\n//\r\n//      it('will call the success handler with the list of crews to which user belongs when the user belongs to some crews', ()=>{\r\n//\r\n//      });\r\n//\r\n//      it('will call the failure handler with Error msg when rest End Point is not accessible', ()=>{\r\n//\r\n//      });\r\n\r\n   });\r\n\r\n});","/* global expect */\r\nimport FollowOnTaskDefinitionSearchConfig from './followOnTaskDefinitionSearchConfig.js';\r\n\r\ndescribe('FollowOnTaskDefinitionSearchConfig followOnTask/followOnTaskDefinitionSearchConfig.js', function() {\r\n\r\n   it('throws exception on empty data parameter', function() {\r\n      expect(function() {\r\n         let config = new FollowOnTaskDefinitionSearchConfig();\r\n      }).toThrowError(\"The response data suppose to be in array form\");\r\n   });\r\n   \r\n   it('throws exception with a object type data parameter instead of array', function() {\r\n      expect(function() {\r\n         let data = {};\r\n         let config = new FollowOnTaskDefinitionSearchConfig(data);\r\n      }).toThrowError(\"The response data suppose to be in array form\");\r\n   });\r\n   \r\n   it('creates a valid config object', function() {\r\n      let data = [];\r\n      let config = new FollowOnTaskDefinitionSearchConfig(data);\r\n      \r\n      expect(config.name).toBe('followOnTaskDefnSearch');\r\n      expect(config.limit).toBe(50);\r\n      expect(config.minLength).toBe(1);\r\n   });\r\n\r\n});\r\n","/* global expect, jasmine, beforeAll, spyOn */\r\n\r\nimport $ from 'jquery';\r\nimport FollowOnTaskDefinitionSearchService from './followOnTaskDefinitionSearchService.js';\r\n\r\ndescribe('FollowOnTaskDefinitionSearchService followOnTask/followOnTaskDefinitionSearchService.js', function() {\r\n   let service;\r\n   let url = \"https://www.google.com\";\r\n   let taskDefinitionResponse = [{\r\n      code: 3,\r\n      configSlotCode: 3,\r\n      name: \"Third\"\r\n   }, {\r\n      code: 2,\r\n      configSlotCode: 2,\r\n      name: \"Second\"\r\n   }, {\r\n      code: 1,\r\n      configSlotCode: 1,\r\n      name: \"First\"\r\n   }];\r\n\r\n   beforeAll(function() {\r\n      this.service = FollowOnTaskDefinitionSearchService;\r\n   });\r\n\r\n   it('Sorts task definitions', function() {\r\n      let sortedData = this.service.sortTaskDefinitions(taskDefinitionResponse);\r\n\r\n      expect(sortedData[0].code).toBe(1);\r\n      expect(sortedData[1].code).toBe(2);\r\n      expect(sortedData[2].code).toBe(3);\r\n   });\r\n\r\n   it('Fetches task definitions with error for invalid response', function() {\r\n      jasmine.Ajax.install();\r\n\r\n      spyOn($, 'ajax').and.callFake(function(e) {\r\n         let invalidResponse = {};\r\n         return e.success(invalidResponse);\r\n      });\r\n\r\n      expect(function() {\r\n         this.service.getFollowOnTaskDefinitions(url);\r\n      }).toThrow();\r\n\r\n      jasmine.Ajax.uninstall();\r\n\r\n   });\r\n\r\n   it('Fetches task definitions successfully', function() {\r\n      jasmine.Ajax.install();\r\n\r\n      spyOn($, 'ajax').and.callFake(function(e) {\r\n         return e.success(taskDefinitionResponse);\r\n      });\r\n\r\n      this.service.getFollowOnTaskDefinitions(url).then(function(fakeData) {\r\n         expect(fakeData).toEqual(taskDefinitionResponse);\r\n      });\r\n\r\n      jasmine.Ajax.uninstall();\r\n\r\n   });\r\n\r\n});\r\n","/* global expect */\r\nimport FollowOnTaskDefinitionSearchConfig from './followOnTaskDefinitionSearchConfig.js';\r\n\r\ndescribe('FollowOnTaskDefinitionSearchConfig followOnTask/followOnTaskDefinitionSearchConfig.js', function() {\r\n\r\n   it('throws exception on empty data parameter', function() {\r\n      expect(function() {\r\n         let config = new FollowOnTaskDefinitionSearchConfig();\r\n      }).toThrowError(\"The response data suppose to be in array form\");\r\n   });\r\n   \r\n   it('throws exception with a object type data parameter instead of array', function() {\r\n      expect(function() {\r\n         let data = {};\r\n         let config = new FollowOnTaskDefinitionSearchConfig(data);\r\n      }).toThrowError(\"The response data suppose to be in array form\");\r\n   });\r\n   \r\n   it('creates a valid config object', function() {\r\n      let data = [];\r\n      let config = new FollowOnTaskDefinitionSearchConfig(data);\r\n      \r\n      expect(config.name).toBe('followOnTaskDefnSearch');\r\n      expect(config.limit).toBe(50);\r\n      expect(config.minLength).toBe(1);\r\n   });\r\n\r\n});\r\n","/* global expect, jasmine, beforeAll, spyOn */\r\n\r\nimport $ from 'jquery';\r\nimport FollowOnTaskDefinitionSearchService from './followOnTaskDefinitionSearchService.js';\r\n\r\ndescribe('FollowOnTaskDefinitionSearchService followOnTask/followOnTaskDefinitionSearchService.js', function() {\r\n   let service;\r\n   let url = \"https://www.google.com\";\r\n   let taskDefinitionResponse = [{\r\n      code: 3,\r\n      configSlotCode: 3,\r\n      name: \"Third\"\r\n   }, {\r\n      code: 2,\r\n      configSlotCode: 2,\r\n      name: \"Second\"\r\n   }, {\r\n      code: 1,\r\n      configSlotCode: 1,\r\n      name: \"First\"\r\n   }];\r\n\r\n   beforeAll(function() {\r\n      this.service = FollowOnTaskDefinitionSearchService;\r\n   });\r\n\r\n   it('Sorts task definitions', function() {\r\n      let sortedData = this.service.sortTaskDefinitions(taskDefinitionResponse);\r\n\r\n      expect(sortedData[0].code).toBe(1);\r\n      expect(sortedData[1].code).toBe(2);\r\n      expect(sortedData[2].code).toBe(3);\r\n   });\r\n\r\n   it('Fetches task definitions with error for invalid response', function() {\r\n      jasmine.Ajax.install();\r\n\r\n      spyOn($, 'ajax').and.callFake(function(e) {\r\n         let invalidResponse = {};\r\n         return e.success(invalidResponse);\r\n      });\r\n\r\n      expect(function() {\r\n         this.service.getFollowOnTaskDefinitions(url);\r\n      }).toThrow();\r\n\r\n      jasmine.Ajax.uninstall();\r\n\r\n   });\r\n\r\n   it('Fetches task definitions successfully', function() {\r\n      jasmine.Ajax.install();\r\n\r\n      spyOn($, 'ajax').and.callFake(function(e) {\r\n         return e.success(taskDefinitionResponse);\r\n      });\r\n\r\n      this.service.getFollowOnTaskDefinitions(url).then(function(fakeData) {\r\n         expect(fakeData).toEqual(taskDefinitionResponse);\r\n      });\r\n\r\n      jasmine.Ajax.uninstall();\r\n\r\n   });\r\n\r\n});\r\n","export default class DateTimeValidator {\n\n   constructor() {\n   }\n\n   \n   static validateHours(value) {\n      // This is based on the NUMBER(9,5) constraint for\n      // sched_labour_role.sched_hr and sched_labour_role.actual_hr\n      let split = value.split('.');\n      if ( split.length > 0 ) {\n         if ( split[0].length > 4 ) {\n            return false;\n         }\n         if ( split.length == 2 ) {\n            if ( split[1].length > 5 ) {\n               return false;\n            }\n         } else if (split.length > 2 ) {\n            return false;\n         }\n      }\n      return true;\n   }\n\n  \n   //\n   // private methods\n   //\n\n   static validateDateFormat(dateStr) {\n      if( ! dateStr ) {\n         throw new Error('dateStr is mandatory.');\n      }\n      if (typeof dateStr !== 'string')  {\n         throw new Error('dateStr is not a string');\n      }\n\n      // regex example: dd-MMM-yyyy\n      const dateFormat = /^(([0-9])|([0-2][0-9])|([3][0-1]))\\-(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)\\-\\d{4}$/;\n      const matchArray = dateStr.match(dateFormat);\n\n      if( matchArray == null ) {\n          throw new Error('dateStr has invalid format.');\n      }\n\n      return true;\n  }\n\n   static validateTimeFormat(timeStr) {\n      if( ! timeStr ){\n         throw new Error('timeStr is mandatory.');\n      }\n      if (typeof timeStr !== 'string')  {\n         throw new Error('timeStr is not a string.');\n      }\n\n      // regex example: hh:mm\n      const timeFormat = /^$|^(([01][0-9])|(2[0-3])):[0-5][0-9]$/;\n      const matchArray = timeStr.match(timeFormat);\n\n      if( matchArray == null ) {\n          throw new Error('timeStr has invalid format.');\n      }\n\n      return true;\n   }\n\n}","import $ from 'jquery';\r\nimport Tabulator from 'tabulator-tables';\r\nimport TaskSupervisionService from './TaskSupervisionService';\r\nimport DateTimeValidator from '../../../common/validation/DateTimeValidator';\r\nimport DateTimeHelper from '../../../common/util/DateTimeHelper';\r\n\r\nexport default class TaskSupervisionController {\r\n\r\n   constructor(parms) {\r\n      this.userId = parms.userId;\r\n\r\n      if (!this.userId) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n\r\n      this.crewsFieldId = parms.crewsFieldId;\r\n\r\n      if (!this.crewsFieldId) {\r\n         throw new Error('crewsFieldId is mandatory');\r\n      }\r\n\r\n      let crewsField = document.getElementById(this.crewsFieldId);\r\n      if (!crewsField || crewsField.tagName != 'SELECT') {\r\n         throw new Error('crewsFieldId must be a SELECT element');\r\n      }\r\n\r\n      this.service = parms.TaskSupervisionService || new TaskSupervisionService();\r\n      this.isAllowedToSearch = parms.isAllowedToSearch === 'true';\r\n      this.isAllowedToEditSchedledHours = parms.isAllowedToEditSchedledHours === 'true';\r\n      this.isAllowedToEditActualHours = parms.isAllowedToEditActualHours === 'true';\r\n      this.startDateWidgetId = parms.startFieldId;\r\n      this.endDateWidgetId = parms.endFieldId;\r\n      this.showCompleteId = parms.showCompleteId;\r\n      this.searchButtonId = parms.searchButtonId;\r\n      this.searchResultsId = parms.searchResultsId;\r\n      this.noSearchResultsMessage = parms.noSearchResultsMessage;\r\n      this.laborRowElaspedTimeThreshold = parms.laborRowElaspedTimeThreshold;\r\n\r\n      this.defaultShowComplete = true;\r\n      this.isScheduledHoursCellEditable.bind(this);\r\n      this.handleScheduleHoursEdit.bind(this);\r\n      this.handleActualHoursEdit.bind(this);\r\n      this.actualHourCellFormatter.bind(this);\r\n   }\r\n\r\n   getServiceInstance() {\r\n      return this.service;\r\n   }\r\n\r\n   init() {\r\n      return new Promise((resolve, reject) => {\r\n         try {\r\n            this.initShowCompleteTasksWidget();\r\n            this.initResultsTable();\r\n         }\r\n         catch (e) {\r\n            console.error(e);\r\n         }\r\n\r\n         this.initSearchButton();\r\n\r\n         Promise.all([this.initCrewsWidget(), this.initStartAndEndWidgets()]).then((results) => {\r\n            this.populateCrewsWidget(results[0]);\r\n            this.setStartAndEndWidgets(results[1]);\r\n            this.performSearch().then(() => resolve());\r\n         }).catch((error) => {\r\n            throw new Error(error);\r\n         });\r\n      });\r\n   }\r\n\r\n   initCrewsWidget() {\r\n      return this.service.getCrewsForUser(this.userId);\r\n   }\r\n\r\n   initStartAndEndWidgets() {\r\n      if (!this.userId) {\r\n         throw new Error('userId is mandatory');\r\n      }\r\n\r\n      try {\r\n         this.validateStartEndWidgetIds();\r\n         let startFieldIds = this.buildFieldIdsForDateTimeWidget(this.startDateWidgetId);\r\n         let endFieldIds = this.buildFieldIdsForDateTimeWidget(this.endDateWidgetId);\r\n         this.setStartEndElemAttrs(startFieldIds, endFieldIds);\r\n         this.validateStartEndElems();\r\n      }\r\n      catch (exception) {\r\n         console.error(\"initStartAndEndWidgets\", exception);\r\n      }\r\n      // The date fields for the DateTime widgets\r\n      // do not provide sufficient validation so we will disable them.\r\n      this.startDateElem.disabled = true;\r\n      this.endDateElem.disabled = true;\r\n\r\n      return this.service.getDefaultStartAndEndDates(this.userId);\r\n   }\r\n\r\n   initShowCompleteTasksWidget() {\r\n      document.getElementById(this.showCompleteId).checked = this.defaultShowComplete;\r\n   }\r\n\r\n\r\n   initResultsTable() {\r\n      // The field names match those in:\r\n      //    com.mxi.mx.web.rest.task.CrewTaskLabourResponse\r\n      const listOfLabourAttrs = ['technician', 'labourSkill', 'labourStatus', 'jobStopReason', 'elapsedHoursMinutes',\r\n         'scheduledHours', 'actualHours'\r\n      ];\r\n      \r\n      // Note: it appears that Tabulator has difficulty if visible:false fields are after other fields,\r\n      // so configure them first.\t  \r\n      this.table = new Tabulator(\"#\" + this.searchResultsId, {\r\n         columns: [\r\n            { title: 'Task Id', field: 'taskId', visible: false },\r\n            { title: 'Labour Row Id', field: 'labourRowId', visible: false },\r\n            { title: 'From Job Stop', field: 'isFromJobStop', visible: false },\r\n            { title: 'Line No', field: 'lineNo', sorter: 'number', align: 'center' },\r\n            { title: 'Task', field: 'taskName', sorter: 'string', align: 'center' },\r\n            { title: 'Task Status', field: 'taskStatus', sorter: 'string', align: 'center' },\r\n            { title: 'Task Class - Subclass', field: 'taskClassSubclass', sorter: 'string', align: 'center' },\r\n            { title: 'Task Priority', field: 'taskPriority', sorter: 'string', align: 'center' },\r\n            { title: 'Aircraft', field: 'aircraft', sorter: 'string', align: 'center' },\r\n            { title: 'Work Package', field: 'workpackage', sorter: 'string', align: 'center' },\r\n            { title: 'Work Location', field: 'workLocation', sorter: 'string', align: 'center' },\r\n            { title: 'Work Area', field: 'workArea', sorter: 'string', align: 'center' },\r\n            { title: 'Scheduled Start Date', field: 'scheduledStartDate', sorter: 'string', align: 'center' },\r\n            { title: 'Actual Start Date', field: 'actualStartDate', sorter: 'string', align: 'center' },\r\n            { field: 'Selected', align: 'center', width: 50, headerSort: false, formatter: () => { return '<input id=\"checkBox\" type=\"checkbox\">'; } },\r\n            { title: 'Technician', field: 'technician', sorter: 'string', align: 'center' },\r\n            { title: 'Skill', field: 'labourSkill', sorter: 'string', align: 'center' },\r\n            { title: 'Labour Row Status', field: 'labourStatus', sorter: 'string', align: 'center' },\r\n            { title: 'Job Stop Reason', field: 'jobStopReason', sorter: 'string', align: 'center' },\r\n            { title: 'Elapsed Time', field: 'elapsedHoursMinutes', sorter: 'string', align: 'center', formatter: this.isElapsedTimeGreaterThanThreshold.bind(this) },\r\n            {\r\n               title: 'Sched. Hours',\r\n               field: 'scheduledHours',\r\n               sorter: 'string',\r\n               align: 'center',\r\n               editor: 'input',\r\n               validator: ['min: 0', this.validateHours],\r\n               editable: this.isScheduledHoursCellEditable,\r\n               cellEdited: this.handleScheduleHoursEdit\r\n            },\r\n            {\r\n               title: 'Actual Hours',\r\n               field: 'actualHours',\r\n               sorter: 'string',\r\n               align: 'center',\r\n               editor: 'input',\r\n               validator: ['min: 0', this.validateHours],\r\n               editable: this.isActualHoursCellEditable,\r\n               cellEdited: this.handleActualHoursEdit,\r\n               formatter: this.actualHourCellFormatter\r\n            }\r\n         ],\r\n         dataSorted: (sorters, rows) => {\r\n            // This check is done as the callback is called before the table has been completely instantiated\r\n            // As a result, an undefined object error message will occur as the setGroupBy is being called on an undefined table\r\n            if (this.table) {\r\n               if (sorters.some((attr) => listOfLabourAttrs.indexOf(attr.field) >= 0)) {\r\n                  this.table.setGroupBy();\r\n               }\r\n               else {\r\n                  this.table.setGroupBy(\"taskId\");\r\n               }\r\n            }\r\n         },\r\n         groupHeader: (value, count, data, group) => {\r\n            return data[0].taskName + \"<span style='color:#000; margin-left:10px;'>(\" + count + \" items)</span>\";\r\n         },\r\n         groupToggleElement: \"header\",\r\n         placeholder: this.noSearchResultsMessage\r\n      });\r\n   }\r\n\r\n\r\n   actualHourCellFormatter(cell) {\r\n\r\n      if (!cell) {\r\n         return cell;\r\n      }\r\n\r\n      if (this.actualHourGreaterThanScheduledHours(cell)) {\r\n         //format cell background to yellow\r\n         cell.getElement().classList.add(\"highlightActualHoursCell\");\r\n      }\r\n\r\n      let time = cell.getValue();\r\n      // Return empty string if Actual Hour value is blank\r\n      // otherwise return Actual Hours value.\r\n      return (time ? time : '');\r\n   }\r\n\r\n   actualHourGreaterThanScheduledHours(cell) {\r\n\r\n      let actualHours = cell.getValue();\r\n      if (!actualHours) {\r\n         return actualHours;\r\n      }\r\n\r\n      let scheduleHours = cell.getRow().getData().scheduledHours;\r\n      if (!scheduleHours) {\r\n         return scheduleHours;\r\n      }\r\n\r\n      return parseInt(actualHours) > parseInt(scheduleHours);\r\n   }\r\n\r\n   initSearchButton() {\r\n      let $button = $('#' + this.searchButtonId);\r\n      if (this.isAllowedToSearch) {\r\n         $button.show();\r\n         $button.click((event) => {\r\n            event.preventDefault();\r\n            this.performSearch();\r\n         });\r\n      }\r\n      else {\r\n         $button.hide();\r\n      }\r\n   }\r\n\r\n   performSearch() {\r\n      return new Promise((resolve, reject) => {\r\n         if (this.isAllowedToSearch) {\r\n            let args = {\r\n               'crewId': document.getElementById(this.crewsFieldId).value,\r\n               'startDateTime': this.formatDateTime(this.startDateWidgetId),\r\n               'endDateTime': this.formatDateTime(this.endDateWidgetId),\r\n               'showCompleteTasks': document.getElementById(this.showCompleteId).checked\r\n            };\r\n\r\n            return this.service.performSearch(args).then(response => {\r\n               this.updateResultsTable(response);\r\n            });\r\n         }\r\n         else {\r\n            resolve();\r\n         }\r\n      });\r\n   }\r\n\r\n   //\r\n   // private methods\r\n   //\r\n\r\n   // Expect crews to be: [{code,name,id}]\r\n   populateCrewsWidget(crews) {\r\n      // Clear existing options.\r\n      $('#' + this.crewsFieldId).find('option').remove();\r\n\r\n      // Sort the crews.\r\n      crews.sort(this.compareCrewAlphanumerically);\r\n\r\n      // Add provided crews as options, if provided.\r\n      if (crews) {\r\n         let select = document.getElementById(this.crewsFieldId);\r\n         let selectOptions = select.options;\r\n         crews.forEach((crew, index) => {\r\n            let option = document.createElement(\"option\");\r\n            option.text = crew.label;\r\n            option.value = crew.id;\r\n            selectOptions.add(option);\r\n         });\r\n\r\n         // Set the first crew as the default.\r\n         select.selectedIndex = 0;\r\n      }\r\n   }\r\n\r\n   compareCrewAlphanumerically(a, b) {\r\n      if (a.label < b.label) return -1;\r\n      if (a.label > b.label) return 1;\r\n      return 0;\r\n   }\r\n\r\n   // Expect message to be a string\r\n   handleFailureToGetCrewsForUser(message) {\r\n      throw new Error(message);\r\n   }\r\n\r\n   validateStartEndWidgetIds() {\r\n      if (!this.startDateWidgetId) {\r\n         throw new Error('startFieldId is mandatory');\r\n      }\r\n      if (typeof this.startDateWidgetId !== 'string') {\r\n         throw new Error('startFieldId is not a string');\r\n      }\r\n      if (!this.endDateWidgetId) {\r\n         throw new Error('endFieldId is mandatory');\r\n      }\r\n      if (typeof this.endDateWidgetId !== 'string') {\r\n         throw new Error('endFieldId is not a string');\r\n      }\r\n   }\r\n\r\n   buildFieldIdsForDateTimeWidget(widgetId) {\r\n      // These ids were determined by looking at the custom tag DateTimeField\r\n      return {\r\n         dateFieldId: widgetId + '_$DATE$',\r\n         timeFieldId: widgetId + '_$TIME$',\r\n         timeZoneFieldId: widgetId + '_$TIMEZONE_DISPLAY$',\r\n         startPickerId: widgetId + '_SelectBtn'\r\n      };\r\n   }\r\n\r\n   setStartEndElemAttrs(startDateWidgetIds, endDateWidgetIds) {\r\n      this.startDateElem = document.getElementById(startDateWidgetIds.dateFieldId);\r\n      this.startTimeElem = document.getElementById(startDateWidgetIds.timeFieldId);\r\n      this.startTimeZoneElem = document.getElementById(startDateWidgetIds.timeZoneFieldId);\r\n      this.startPickerElem = document.getElementById(startDateWidgetIds.startPickerId);\r\n\r\n      this.endDateElem = document.getElementById(endDateWidgetIds.dateFieldId);\r\n      this.endTimeElem = document.getElementById(endDateWidgetIds.timeFieldId);\r\n      this.endTimeZoneElem = document.getElementById(endDateWidgetIds.timeZoneFieldId);\r\n      this.endPickerElem = document.getElementById(endDateWidgetIds.startPickerId);\r\n   }\r\n\r\n   validateStartEndElems() {\r\n      if (!this.startDateElem) {\r\n         throw new Error('start date field does not exist in the DOM.');\r\n      }\r\n      if (!this.startTimeElem) {\r\n         throw new Error('start time field does not exist in the DOM.');\r\n      }\r\n      if (!this.startTimeZoneElem) {\r\n         throw new Error('start time zone field does not exist in the DOM.');\r\n      }\r\n      if (!this.startPickerElem) {\r\n         throw new Error('start date picker field does not exist in the DOM.');\r\n      }\r\n\r\n      if (!this.endDateElem) {\r\n         throw new Error('end date field does not exist in the DOM.');\r\n      }\r\n      if (!this.endTimeElem) {\r\n         throw new Error('end time field does not exist in the DOM.');\r\n      }\r\n      if (!this.endTimeZoneElem) {\r\n         throw new Error('end time zone field does not exist in the DOM.');\r\n      }\r\n      if (!this.endPickerElem) {\r\n         throw new Error('end date picker field does not exist in the DOM.');\r\n      }\r\n   }\r\n\r\n   setStartAndEndWidgets(defaultStartEndValues) {\r\n      this.startDateElem.value = defaultStartEndValues.startDate;\r\n      this.startTimeElem.value = defaultStartEndValues.startTime;\r\n      this.startTimeZoneElem.value = defaultStartEndValues.startTimeZone;\r\n\r\n      this.endDateElem.value = defaultStartEndValues.endDate;\r\n      this.endTimeElem.value = defaultStartEndValues.endTime;\r\n      this.endTimeZoneElem.value = defaultStartEndValues.endTimeZone;\r\n   }\r\n\r\n\r\n   updateResultsTable(response) {\r\n      // The response is a json list of objects generated from:\r\n      //    com.mxi.mx.web.rest.task.CrewTaskLabourResponse\r\n      let addToTop = true;\r\n      this.table.clearData();\r\n      this.table.addData(response, addToTop);\r\n      this.table.setSort([{ column: 'lineNo', dir: 'asc' }]);\r\n   }\r\n\r\n\r\n   // Format the date and time to that expected by com.mxi.mx.common.utils.DataTypeUtils\r\n   formatDateTime(dateTimeWidgetId) {\r\n      let fieldIds = this.buildFieldIdsForDateTimeWidget(dateTimeWidgetId);\r\n\r\n      let dateValue = document.getElementById(fieldIds.dateFieldId).value;\r\n      let timeValue = document.getElementById(fieldIds.timeFieldId).value;\r\n\r\n      return dateValue + ' ' + timeValue;\r\n   }\r\n\r\n   isScheduledHoursCellEditable(cell) {\r\n      if (this.isAllowedToEditSchedledHours) {\r\n         let rowData = cell.getRow().getData();\r\n         if (rowData.isFromJobStop && rowData.labourStatus == 'ACTV') {\r\n            return true;\r\n         }\r\n      }\r\n      return false;\r\n   }\r\n\r\n   isActualHoursCellEditable(cell) {\r\n      if (this.isAllowedToEditActualHours) {\r\n         let rowData = cell.getRow().getData();\r\n         if (rowData.labourStatus == 'COMPLETE') {\r\n            return true;\r\n         }\r\n      }\r\n      return false;\r\n   }\r\n\r\n   isElapsedTimeGreaterThanThreshold(cell) {\r\n      let time = cell.getValue();\r\n      if (time) {\r\n         let decimalTime = DateTimeValidator.convertTimeToDecimal(time);\r\n         if (decimalTime > parseFloat(this.laborRowElaspedTimeThreshold)) {\r\n            return \"<span class='elapsedTimeExceedsThreshold'>\" + time + \"</span>\";\r\n         }\r\n      }\r\n\r\n      return time;\r\n   }\r\n\r\n   validateHours(cell, value) {\r\n      return DateTimeValidator.validateHours(value);\r\n   }\r\n\r\n   handleScheduleHoursEdit(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      this.service.updateScheduledHours(\r\n         rowData.taskId,\r\n         rowData.labourRowId,\r\n         cell.getValue());\r\n   }\r\n\r\n   handleActualHoursEdit(cell) {\r\n      let rowData = cell.getRow().getData();\r\n      this.service.updateActualHours(\r\n         rowData.taskId,\r\n         rowData.labourRowId,\r\n         cell.getValue());\r\n   }\r\n}\r\n","/* global $, expect, spyOn, jasmine, setFixtures */\r\nimport $ from 'jquery';\r\nimport TaskSupervisionController from './TaskSupervisionController';\r\n\r\ndescribe('TaskSupervisionController', function() {\r\n\r\n   describe('initCrewsWidget', function() {\r\n\r\n      const testCrewList = [\r\n         { id: '1', code: 'crew1', description: 'crew one' },\r\n         { id: '2', code: 'crew2', description: 'crew two' },\r\n         { id: '3', code: 'crew3', description: 'crew three' }\r\n      ];\r\n      const testCrewListOfOne = [\r\n         { id: '1', code: 'crew1', description: 'crew one' }\r\n      ];\r\n\r\n      const testCurrentDateTimeResponse = {\r\n         startYear: '2019',\r\n         startMonth: '01',\r\n         startDayOfMonth: '01',\r\n         startHourInDay: '12',\r\n         startHourInDay: '00',\r\n         startMinute: '00',\r\n         endYear: '2019',\r\n         endMonth: '02',\r\n         endDayOfMonth: '01',\r\n         endHourInDay: '12',\r\n         endMinute: '00',\r\n         startTimezone: \"EST\"\r\n      };\r\n\r\n      let validParms;\r\n      let fakeService;\r\n\r\n      beforeEach(function() {\r\n         jasmine.Ajax.install();\r\n         this.validParms = {\r\n            userId: 'userId',\r\n            crewsFieldId: 'crewsFieldId',\r\n            startFieldId: 'idStartDateTime',\r\n            endFieldId: 'idEndDateTime',\r\n            showCompleteId: 'idShowComplete',\r\n            searchButtonId: 'idSearchButton',\r\n            searchResultsId: 'idSearchResults',\r\n            isAllowedToSearch: 'true'\r\n         };\r\n\r\n         setFixtures(\r\n            '<select id=\"' + this.validParms.crewsFieldId + '\"></select>' +\r\n            '<input id=\"' + this.validParms.showCompleteId + '\" type=\"checkbox\"/>' +\r\n            '<button id=\"' + this.validParms.searchButtonId + '\" />' +\r\n            '<div id=\"' + this.validParms.searchResultsId + '\" />' +\r\n            '<div id=\"' + this.validParms.startFieldId + '\" />' +\r\n            '<div id=\"' + this.validParms.startFieldId + '_$DATE$\" />' +\r\n            '<div id=\"' + this.validParms.startFieldId + '_$TIME$\" />' +\r\n            '<div id=\"' + this.validParms.startFieldId + '_$TIMEZONE_DISPLAY$\" />' +\r\n            '<div id=\"' + this.validParms.startFieldId + '_SelectBtn\" />' +\r\n            '<div id=\"' + this.validParms.endFieldId + '\" />' +\r\n            '<div id=\"' + this.validParms.endFieldId + '_$DATE$\" />' +\r\n            '<div id=\"' + this.validParms.endFieldId + '_$TIME$\" />' +\r\n            '<div id=\"' + this.validParms.endFieldId + '_$TIMEZONE_DISPLAY$\" />' +\r\n            '<div id=\"' + this.validParms.endFieldId + '_SelectBtn\" />'\r\n         );\r\n      });\r\n\r\n      afterEach(function() {\r\n         jasmine.Ajax.uninstall();\r\n      });\r\n\r\n      it('Throws error when user id not provided.', function() {\r\n         let parms = this.validParms;\r\n         parms.userId = undefined;\r\n         expect(function() {\r\n            let controller = new TaskSupervisionController(parms);\r\n            controller.initCrewsWidget();\r\n         }).toThrowError('userId is mandatory');\r\n      });\r\n\r\n      it('Throws error when user id is blank.', function() {\r\n         let parms = this.validParms;\r\n         parms.userId = undefined;\r\n         expect(function() {\r\n            let controller = new TaskSupervisionController(parms);\r\n         }).toThrowError('userId is mandatory');\r\n      });\r\n\r\n\r\n      it('Throws error when crew field id not provided.', function() {\r\n         let parms = this.validParms;\r\n         parms.crewsFieldId = undefined;\r\n         expect(function() {\r\n            let controller = new TaskSupervisionController(parms);\r\n         }).toThrowError('crewsFieldId is mandatory');\r\n      });\r\n\r\n      it('Throws error when crew field id is blank.', function() {\r\n         let parms = this.validParms;\r\n         parms.crewsFieldId = '';\r\n         expect(function() {\r\n            let controller = new TaskSupervisionController(parms);\r\n         }).toThrowError('crewsFieldId is mandatory');\r\n      });\r\n\r\n      it('Throws error when crew field id does not identify a select element.', function() {\r\n         let parms = this.validParms;\r\n         parms.crewsFieldId = 'non-existing-id';\r\n         expect(function() {\r\n            let controller = new TaskSupervisionController(parms);\r\n         }).toThrowError('crewsFieldId must be a SELECT element');\r\n      });\r\n\r\n      it('Throws error when crew field id identifies a non-select element.', function() {\r\n         setFixtures('<input id=\"crewsFieldId\"></input>');\r\n         let parms = this.validParms;\r\n         parms.crewsFieldId = 'crewsFieldId';\r\n         expect(function() {\r\n            let controller = new TaskSupervisionController(parms);\r\n         }).toThrowError('crewsFieldId must be a SELECT element');\r\n      });\r\n\r\n      it('Fetch of crew list is returned', function(done) {\r\n         // Arrange \r\n         setFixtures('<select id=\"' + this.validParms.crewsFieldId + '\"></select>');\r\n         let controller = new TaskSupervisionController(this.validParms);\r\n\r\n         spyOn($, 'ajax').and.callFake(function(e) {\r\n            return e.success(testCrewList);\r\n         });\r\n\r\n         // Act\r\n         controller.initCrewsWidget().then(function(response) {\r\n            // Assert\r\n            expect(response).toBe(testCrewList);\r\n            done();\r\n         });\r\n      });\r\n\r\n      it('Populates Crew dropdown when provided list of crews.', function(done) {\r\n         // Arrange \r\n         this.validParms.isAllowedToSearch = 'false';\r\n         let controller = new TaskSupervisionController(this.validParms);\r\n\r\n         spyOn($, 'ajax').and.callFake(function(request) {\r\n            if (request.url === '/maintenix/rest/crews') {\r\n               return request.success(testCrewList);\r\n            }\r\n            else if (request.url === '/maintenix/rest/datetime/getCurrent') {\r\n               return request.success(testCurrentDateTimeResponse);\r\n            }\r\n            else {\r\n               console.warn(\"Unsupported url: \", request.url);\r\n            }\r\n         });\r\n\r\n         let crewsFieldSelectEl = document.getElementById(this.validParms.crewsFieldId);\r\n         let selectOptions = crewsFieldSelectEl.options;\r\n\r\n         // Act\r\n         controller.init().then(function(response) {\r\n            // Assert\r\n            expect(selectOptions.length).toBe(testCrewList.length);\r\n            /**\r\n            for (var i = 0; i < selectOptions.length; i++) {\r\n               let expectedText = testCrewList[i].code + \" (\" + testCrewList[i].description + \")\";\r\n               console.warn(\"selectOptions: \", selectOptions[i].text, testCrewList[i].id, expectedText);\r\n               // expect(selectOptions[i].text).toBe(expectedText);\r\n               // expect(selectOptions[i].value).toBe(testCrewList[i].id);\r\n            } **/\r\n\r\n            // expect(crewsFieldSelectEl.selectedIndex).toBe(0);\t\t\t \t\t\t \r\n            done();\r\n         });\r\n      });\r\n\r\n      /**\t\r\n      it('Clears crew dropdown prior to populating it with provided list of crews.', function() {\r\n         // Arrange\r\n         setFixtures( \r\n               '<select id=\"' + this.validParms.crewsFieldId + '\">' +\r\n               '   <option id=\"10\">crew10</option>'+\r\n               '   <option id=\"20\">crew20</option>'+\r\n               '</select>'\r\n         );\r\n\r\n         let fakeService = new TaskSupervisionService();\r\n         spyOn(fakeService, 'getCrewsForUser').and.callFake( function(userId, sucessHandler, failureHandler) {\r\n            sucessHandler(testCrewList);\r\n         });\r\n\r\n         let parms = this.validParms;\r\n         parms.TaskSupervisionService = fakeService;\r\n         let controller = new TaskSupervisionController(parms);\r\n\r\n         // Act\r\n         controller.initCrewsWidget();\r\n\r\n         // Assert\r\n         let select = document.getElementById(this.validParms.crewsFieldId);\r\n         let selectOptions = select.options;\r\n         expect(selectOptions.length).toBe(3);\r\n         for (var i=0; i<selectOptions.length; i++) {\r\n            let expectedText = testCrewList[i].code + \" (\" + testCrewList[i].description +\")\";\r\n            expect(selectOptions[i].text).toBe(expectedText);\r\n            expect(selectOptions[i].value).toBe(testCrewList[i].id);\r\n         }\r\n         expect(select.selectedIndex).toBe(0);\t\t \r\n      });\r\n**/\r\n      /**\r\n            it('Populates Crew dropdown when provided list of a single crew.', function() {\r\n               // Arrange\r\n               let fakeService = new TaskSupervisionService();\r\n               spyOn(fakeService, 'getCrewsForUser').and.callFake( function(userId, sucessHandler, failureHandler) {\r\n                  sucessHandler(testCrewListOfOne);\r\n               });\r\n\r\n               let parms = this.validParms;\r\n               parms.TaskSupervisionService = fakeService;\r\n               let controller = new TaskSupervisionController(parms);\r\n\r\n               // Act\r\n               controller.initCrewsWidget();\r\n\r\n               // Assert\r\n               let select = document.getElementById(this.validParms.crewsFieldId);\r\n               let selectOptions = select.options;\r\n               expect(selectOptions.length).toBe(1);\r\n\r\n               let expectedText = testCrewListOfOne[0].code + \" (\" + testCrewListOfOne[0].description +\")\";\r\n               expect(selectOptions[0].text).toBe(expectedText);\r\n               expect(selectOptions[0].value).toBe(testCrewListOfOne[0].id);\r\n               expect(select.selectedIndex).toBe(0);\r\n            });\r\n\r\n            it('Does not populate Crew dropdown when provided no list of crews.', function() {\r\n               // Arrange\r\n               let crews = undefined;\r\n               let fakeService = new TaskSupervisionService();\r\n               spyOn(fakeService, 'getCrewsForUser').and.callFake( function(userId, sucessHandler, failureHandler) {\r\n                  sucessHandler(crews);\r\n               });\r\n\r\n               let parms = this.validParms;\r\n               parms.TaskSupervisionService = fakeService;\r\n               let controller = new TaskSupervisionController(parms);\r\n\r\n               // Act\r\n               controller.initCrewsWidget();\r\n\r\n               // Assert\r\n               let select = document.getElementById(this.validParms.crewsFieldId);\r\n               let selectOptions = select.options;\r\n               expect(selectOptions.length).toBe(0);\r\n               expect(select.selectedIndex).toBe(-1);\r\n            });\r\n\r\n            it('Does not populate Crew dropdown when provided empty list of crews.', function() {\r\n               // Arrange\r\n               let crews = [];\r\n               let fakeService = new TaskSupervisionService();\r\n               spyOn(fakeService, 'getCrewsForUser').and.callFake( function(userId, sucessHandler, failureHandler) {\r\n                  sucessHandler(crews);\r\n               });\r\n\r\n               let parms = this.validParms;\r\n               parms.TaskSupervisionService = fakeService;\r\n               let controller = new TaskSupervisionController(parms);\r\n\r\n               // Act\r\n               controller.initCrewsWidget();\r\n\r\n               // Assert\r\n               let select = document.getElementById(this.validParms.crewsFieldId);\r\n               let selectOptions = select.options;\r\n               expect(selectOptions.length).toBe(0);\r\n               expect(select.selectedIndex).toBe(-1);\r\n            });\r\n\r\n            it('Throws error when unable to get crews for user.', function() {\r\n               // Arrange\r\n               let errorMessage = 'errorMessage';\r\n               let fakeService = new TaskSupervisionService();\r\n               spyOn(fakeService, 'getCrewsForUser').and.callFake( function(userId, sucessHandler, failureHandler) {\r\n                  failureHandler(errorMessage);\r\n               });\r\n\r\n               let parms = this.validParms;\r\n               parms.TaskSupervisionService = fakeService;\r\n               let controller = new TaskSupervisionController(parms);\r\n\r\n               // Act and Assert\r\n               expect(function() {\r\n                  controller.initCrewsWidget();\r\n               }).toThrowError(errorMessage);\r\n            });\r\n      \t  **/\r\n   });\r\n\r\n});\r\n","/*global expect*/\nimport { Add, Subtract, Multiply } from './featureMath.js';\n\ndescribe('[Dummy]', () => {\n\n\tit('[Add] should add two numbers together and return the result', () => {\n\t\texpect(Add(1, 2)).toBe(3);\n\t});\n\n\tit('[Subtract] should subtract second param from first and return the result', () => {\n\t\texpect(Subtract(1, 2)).toBe(-1);\n\t});\n\n\tit('[Multiply] should multiply two numbers and return the result', () => {\n\t\texpect(Multiply(1, 2)).toBe(2);\n\t});\n\n});\n","export const Add = function(x, y) {\n\treturn(x+y);\n}\n\nexport const Subtract = function(x, y) {\n\treturn(x-y);\n}\n\nexport const Multiply = function(x, y) {\n\treturn(x*y);\n}\n\nexport const Divide = function(x, y) {\n\treturn(x/y);\n}","import $ from 'jquery';\r\nimport FollowOnTaskDefinitionSearchConfig from './followOnTaskDefinitionSearchConfig.js';\r\nimport FollowOnTaskDefinitionSearchService from './followOnTaskDefinitionSearchService.js';\r\n\r\n/**\r\n * The button controller that handles ui interactions.\r\n */\r\nexport default class FollowOnTaskDefinitionSearchController {\r\n\r\n   constructor(typeAheadId, okButtonId, notFoundMsgId, followOnTaskDefnUuidOuputId, apiUrlId) {\r\n      let scope = this;\r\n      this.notFoundMsgEl = $(\"#\" + notFoundMsgId);\r\n      this.okBtnEl = $('#' + okButtonId);\r\n      this.typeAheadSearchInputEl = $('#' + typeAheadId);\r\n      this.followOnTaskDefnUuidOuputEl = $('#' + followOnTaskDefnUuidOuputId);\r\n      let apiUrlEl = $(\"#\" + apiUrlId);\r\n\r\n      if (!this.notFoundMsgEl.length > 0) {\r\n         throw new Error(\"Not found message element required\");\r\n      }\r\n\r\n      if (!this.okBtnEl.length > 0) {\r\n         throw new Error(\"Ok button element required\");\r\n      }\r\n\r\n      if (!this.typeAheadSearchInputEl.length > 0) {\r\n         throw new Error(\"Typeahead input element required\");\r\n      }\r\n\r\n      if (!this.followOnTaskDefnUuidOuputEl.length > 0) {\r\n         throw new Error(\"Output followOn task definition UUI input element required\");\r\n      }\r\n\r\n      if (!apiUrlEl.length > 0) {\r\n         throw new Error(\"REST api url element is required\");\r\n      }\r\n\r\n      this.apiUrl = apiUrlEl.val();\r\n      this.selectedOption = '';\r\n\r\n      this.typeAheadSearchInputEl.keydown(function() {\r\n         setTimeout(\r\n            function() {\r\n               if (scope.typeAheadSearchInputEl.val() != scope.selectedOption) {\r\n                  scope.disableOkBtn();\r\n                  scope.clearSelectedTaskDefinition();\r\n               }\r\n            });\r\n      });\r\n\r\n      // bind sibling methods to class instance.\r\n      this.initialize = this.initialize.bind(this);\r\n\r\n   }\r\n\r\n   /**\r\n    * set the id value of the selected task definition to our html input element\r\n    */\r\n   setSelectedTaskDefinition(suggestion) {\r\n      if (suggestion) {\r\n         this.typeAheadSearchInputEl.val(this.displayFollowOn(null, suggestion));\r\n         this.selectedOption = this.typeAheadSearchInputEl.val();\r\n         this.followOnTaskDefnUuidOuputEl.attr('value', suggestion.id);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * clear any selected task definition value in our html input element\r\n    */\r\n   clearSelectedTaskDefinition() {\r\n      this.followOnTaskDefnUuidOuputEl.attr('value', '');\r\n   }\r\n\r\n   /**\r\n    * setup UI elements, fetch task definitions and configure type ahead\r\n    */\r\n   initialize() {\r\n      this.disableOkBtn();\r\n\r\n      try {\r\n         return FollowOnTaskDefinitionSearchService.getFollowOnTaskDefinitions(this.apiUrl).then((taskDefinitions) => {\r\n            this.configureTypeAhead(taskDefinitions);\r\n            // once the typeahead input is initialized, the type field will lost focus, have to\r\n            // manually focus it again.\r\n            this.typeAheadSearchInputEl.focus();\r\n         });\r\n\r\n      }\r\n      catch (error) {\r\n         throw new Error(\"Error while trying to fetch task definitions.\", error);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * configure type ahead with data source and default configuration.\r\n    */\r\n   configureTypeAhead(taskDefinitions) {\r\n      let scope = this;\r\n      let config = new FollowOnTaskDefinitionSearchConfig(taskDefinitions);\r\n\r\n      // create a display value that will allow full text search on full value.\r\n      $.each(config.data, function(index, data) {\r\n         data.displayValue = scope.displayFollowOn(null, data);\r\n      });\r\n\r\n      $.typeahead({\r\n         input: scope.typeAheadSearchInputEl,\r\n         highlight: true,\r\n         name: config.name,\r\n         limit: config.limit,\r\n         minLength: config.minLength,\r\n         display: [\"displayValue\"],\r\n         emptyTemplate: '<div class=\"mx-typeahead-msg-notfound\">' + scope.notFoundMsgEl.val() + '</div>',\r\n         source: {\r\n            data: config.data,\r\n         },\r\n         callback: {\r\n            onClick: function(typeAheadInputEl, selectionEl, selectedRecord, event) {\r\n               event.preventDefault();\r\n               scope.enableOkBtn();\r\n\r\n               // save user selection from the search result.\r\n               scope.setSelectedTaskDefinition(selectedRecord);\r\n               this.hideLayout();\r\n            }\r\n         }\r\n      });\r\n   }\r\n\r\n   // Define how the result is displayed in the dropdown.\r\n   // It will display the result in the format of: task code - configslot code - task name\r\n   displayFollowOn(query, suggestionObj) {\r\n      if (suggestionObj) {\r\n         return suggestionObj.code + \" - \" + suggestionObj.configSlotCode + \" - \" + suggestionObj.name;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Wrapper to enable our OK button\r\n    */\r\n   enableOkBtn() {\r\n      if (this.okBtnEl) {\r\n         if (this.okBtnEl.attr('originOnClickEvent')) {\r\n            this.okBtnEl.attr('onclick', this.okBtnEl.attr('originOnClickEvent'));\r\n         }\r\n\r\n         if (this.okBtnEl.attr('originTitle')) {\r\n            this.okBtnEl.attr('title', this.okBtnEl.attr('originTitle'));\r\n         }\r\n\r\n         this.okBtnEl.removeClass('disabled');\r\n         this.okBtnEl.removeAttr('disabled');\r\n         this.okBtnEl.removeAttr('originOnClickEvent');\r\n         this.okBtnEl.removeAttr('originTitle');\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Wrapper to disable our OK button\r\n    */\r\n   disableOkBtn() {\r\n      if (this.okBtnEl) {\r\n         // store the button onclick handler and title for future restore\r\n         if (!this.okBtnEl.attr('originOnClickEvent')) {\r\n            this.okBtnEl.attr('originOnClickEvent', this.okBtnEl.attr('onclick'));\r\n         }\r\n\r\n         if (!this.okBtnEl.attr('originTitle')) {\r\n            this.okBtnEl.attr('originTitle', this.okBtnEl.attr('title'));\r\n         }\r\n\r\n         this.okBtnEl.addClass('disabled');\r\n         this.okBtnEl.attr('disabled', 'disabled');\r\n         this.okBtnEl.attr('onclick', false);\r\n         this.okBtnEl.attr('title', '');\r\n      }\r\n   }\r\n\r\n}\r\n","/* global expect, jasmine, spyOn, $, setFixtures */\r\n/**\r\n * Create Follow-on Task Search Test Suite\r\n **/\r\n \r\nimport $ from 'jquery';\r\nimport FollowOnTaskDefinitionSearchController from './followOnTaskDefinitionSearchController.js';\r\n\r\ndescribe('FollowOnTaskDefinitionSearchController followOnTask/followOnTaskDefinitionSearchController.js', function() {\r\n   let restApiUrl = \"/someRestApi\";\r\n\r\n   function getGoodController() {\r\n      return new FollowOnTaskDefinitionSearchController('followOnTaskSearchQuery',\r\n         'idButtonOk',\r\n         'idTypeaheadNotFoundMessage',\r\n         'idFieldFollowOnTaskDefnUuid',\r\n         'idfollowOnTaskDefinitionRestAPI');\r\n   }\r\n\r\n   function setUpHTMLFixture() {\r\n      setFixtures(\r\n         '<form id=\"form-typeahead-test\" name=\"form-typeahead-test\">' +\r\n         '  <div class=\"typeahead__container\">' +\r\n         '     <div class=\"typeahead__field\">' +\r\n         '        <span class=\"typeahead__query\">' +\r\n         '          <input class= \"js-typeahead-test\" id=\"followOnTaskSearchQuery\" name=\"followOnTaskSearchQuery\">' +\r\n         '        </span>' +\r\n         '     </div>' +\r\n         '  </div>' +\r\n         '  <button id=\"idButtonOk\" title=\"mytitle\">Ok</button>' +\r\n         '  <input type=\"hidden\" name=\"aFollowOnTaskDefinitionUuid\" id=\"idFieldFollowOnTaskDefnUuid\">' +\r\n         '  <input type=\"hidden\" id=\"idTypeaheadNotFoundMessage\" value=\"web.msg.MSG_NO_MATCHING_FOLLOWON_TASK_DEFINITIONS\">' +\r\n         '  <input type=\"hidden\" id=\"idfollowOnTaskDefinitionRestAPI\" value=\"' + restApiUrl + '\"' +\r\n         '</form>');\r\n   }\r\n\r\n   beforeEach(function() {\r\n      jasmine.Ajax.install();\r\n      setUpHTMLFixture();\r\n      this.okButtonEl = $('#idButtonOk');\r\n      this.fieldFollowOnTaskDefnUuidEl = $('#idFieldFollowOnTaskDefnUuid');\r\n   });\r\n\r\n   afterEach(function() {\r\n      jasmine.Ajax.uninstall();\r\n   });\r\n\r\n   it(\"Should have a button with OK label\", function() {\r\n      expect(this.okButtonEl).toHaveText(\"Ok\");\r\n   });\r\n\r\n   it(\"Should throw error indicating missing typeaheadId\", function() {\r\n\r\n      expect(function() {\r\n         new FollowOnTaskDefinitionSearchController('FAKE_followOnTaskSearchQuery',\r\n            'FAKE_idButtonOk',\r\n            'FAKE_idTypeaheadNotFoundMessage',\r\n            'FAKE_idFieldFollowOnTaskDefnUuid',\r\n            'FAKE_idfollowOnTaskDefinitionRestAPI');\r\n      }).toThrow();\r\n   });\r\n\r\n   it(\"Should have Ok button enabled\", function() {\r\n      let controller = getGoodController();\r\n      controller.enableOkBtn();\r\n      expect(this.okButtonEl).not.toHaveClass('disabled');\r\n   });\r\n\r\n   it(\"Should have Ok button disabled\", function() {\r\n      let controller = getGoodController();\r\n      controller.disableOkBtn();\r\n      expect(this.okButtonEl).toHaveClass('disabled');\r\n   });\r\n\r\n\r\n   it('returns a properly constructed display value', function() {\r\n      let data = [{\r\n         code: 5,\r\n         configSlotCode: 3,\r\n         name: 'test'\r\n      }];\r\n\r\n      let controller = getGoodController();\r\n      expect(controller.displayFollowOn(null, data[0])).toBe(\"5 - 3 - test\");\r\n   });\r\n\r\n   it(\"Should set and clear selected task definition of output element\", function() {\r\n      let controller = getGoodController();\r\n      controller.setSelectedTaskDefinition({ id: 'someValue' });\r\n      expect(this.fieldFollowOnTaskDefnUuidEl.attr('value')).toBe('someValue');\r\n\r\n      controller.clearSelectedTaskDefinition();\r\n      expect(this.fieldFollowOnTaskDefnUuidEl.attr('value')).toBe('');\r\n   });\r\n\r\n   it('Fetches task definitions successfully', function(done) {\r\n      let controller = getGoodController();\r\n      let responseTaskDefinitions = [\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD5\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact1\", \"code\": \"NC14992-REQ1\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD6\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact2\", \"code\": \"NC14992-REQ2\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD7\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact3\", \"code\": \"NC14992-REQ3\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD8\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact4\", \"code\": \"NC14992-REQ4\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD9\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact5\", \"code\": \"NC14992-REQ5\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCE3\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact6\", \"code\": \"NC14992-REQ6\" },\r\n      ];\r\n\r\n      spyOn($, 'ajax').and.callFake(function(e) {\r\n         console.log(\"in ajax\");\r\n         return e.success(responseTaskDefinitions);\r\n      });\r\n\r\n      let okButtonEl = $('#idButtonOk');\r\n      let nativeEl = $(\"#followOnTaskSearchQuery\");\r\n\r\n      // initialize controller\r\n      console.log(\"init\");\r\n      try {\r\n      controller.initialize().then(function() {\r\n         console.log(\"done init\");\r\n         // check to see if ajax was done with proper url\r\n         expect($.ajax.calls.mostRecent().args[0].url).toEqual(restApiUrl);\r\n\r\n         // check if ok button was disabled\r\n         expect(okButtonEl).toHaveClass('disabled');\r\n\r\n         // check if focus was given to component\r\n         expect(nativeEl).toBeFocused();\r\n         done();\r\n      });\r\n      } catch (e) {\r\n         console.error(\"error: \", e);\r\n      }\r\n\r\n   });\r\n\r\n});\r\n","import $ from 'jquery';\r\nimport FollowOnTaskDefinitionSearchConfig from './followOnTaskDefinitionSearchConfig.js';\r\nimport FollowOnTaskDefinitionSearchService from './followOnTaskDefinitionSearchService.js';\r\n\r\n/**\r\n * The button controller that handles ui interactions.\r\n */\r\nexport default class FollowOnTaskDefinitionSearchController {\r\n\r\n   constructor(typeAheadId, okButtonId, notFoundMsgId, followOnTaskDefnUuidOuputId, apiUrlId) {\r\n      let scope = this;\r\n      this.notFoundMsgEl = $(\"#\" + notFoundMsgId);\r\n      this.okBtnEl = $('#' + okButtonId);\r\n      this.typeAheadSearchInputEl = $('#' + typeAheadId);\r\n      this.followOnTaskDefnUuidOuputEl = $('#' + followOnTaskDefnUuidOuputId);\r\n      let apiUrlEl = $(\"#\" + apiUrlId);\r\n\r\n      if (!this.notFoundMsgEl.length > 0) {\r\n         throw new Error(\"Not found message element required\");\r\n      }\r\n\r\n      if (!this.okBtnEl.length > 0) {\r\n         throw new Error(\"Ok button element required\");\r\n      }\r\n\r\n      if (!this.typeAheadSearchInputEl.length > 0) {\r\n         throw new Error(\"Typeahead input element required\");\r\n      }\r\n\r\n      if (!this.followOnTaskDefnUuidOuputEl.length > 0) {\r\n         throw new Error(\"Output followOn task definition UUI input element required\");\r\n      }\r\n\r\n      if (!apiUrlEl.length > 0) {\r\n         throw new Error(\"REST api url element is required\");\r\n      }\r\n\r\n      this.apiUrl = apiUrlEl.val();\r\n      this.selectedOption = '';\r\n\r\n      this.typeAheadSearchInputEl.keydown(function() {\r\n         setTimeout(\r\n            function() {\r\n               if (scope.typeAheadSearchInputEl.val() != scope.selectedOption) {\r\n                  scope.disableOkBtn();\r\n                  scope.clearSelectedTaskDefinition();\r\n               }\r\n            });\r\n      });\r\n\r\n      // bind sibling methods to class instance.\r\n      this.initialize = this.initialize.bind(this);\r\n\r\n   }\r\n\r\n   /**\r\n    * set the id value of the selected task definition to our html input element\r\n    */\r\n   setSelectedTaskDefinition(suggestion) {\r\n      if (suggestion) {\r\n         this.typeAheadSearchInputEl.val(this.displayFollowOn(null, suggestion));\r\n         this.selectedOption = this.typeAheadSearchInputEl.val();\r\n         this.followOnTaskDefnUuidOuputEl.attr('value', suggestion.id);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * clear any selected task definition value in our html input element\r\n    */\r\n   clearSelectedTaskDefinition() {\r\n      this.followOnTaskDefnUuidOuputEl.attr('value', '');\r\n   }\r\n\r\n   /**\r\n    * setup UI elements, fetch task definitions and configure type ahead\r\n    */\r\n   initialize() {\r\n      this.disableOkBtn();\r\n\r\n      try {\r\n         return FollowOnTaskDefinitionSearchService.getFollowOnTaskDefinitions(this.apiUrl).then((taskDefinitions) => {\r\n            this.configureTypeAhead(taskDefinitions);\r\n            // once the typeahead input is initialized, the type field will lost focus, have to\r\n            // manually focus it again.\r\n            this.typeAheadSearchInputEl.focus();\r\n         });\r\n\r\n      }\r\n      catch (error) {\r\n         throw new Error(\"Error while trying to fetch task definitions.\", error);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * configure type ahead with data source and default configuration.\r\n    */\r\n   configureTypeAhead(taskDefinitions) {\r\n      let scope = this;\r\n      let config = new FollowOnTaskDefinitionSearchConfig(taskDefinitions);\r\n\r\n      // create a display value that will allow full text search on full value.\r\n      $.each(config.data, function(index, data) {\r\n         data.displayValue = scope.displayFollowOn(null, data);\r\n      });\r\n\r\n      $.typeahead({\r\n         input: scope.typeAheadSearchInputEl,\r\n         highlight: true,\r\n         name: config.name,\r\n         limit: config.limit,\r\n         minLength: config.minLength,\r\n         display: [\"displayValue\"],\r\n         emptyTemplate: '<div class=\"mx-typeahead-msg-notfound\">' + scope.notFoundMsgEl.val() + '</div>',\r\n         source: {\r\n            data: config.data,\r\n         },\r\n         callback: {\r\n            onClick: function(typeAheadInputEl, selectionEl, selectedRecord, event) {\r\n               event.preventDefault();\r\n               scope.enableOkBtn();\r\n\r\n               // save user selection from the search result.\r\n               scope.setSelectedTaskDefinition(selectedRecord);\r\n               this.hideLayout();\r\n            }\r\n         }\r\n      });\r\n   }\r\n\r\n   // Define how the result is displayed in the dropdown.\r\n   // It will display the result in the format of: task code - configslot code - task name\r\n   displayFollowOn(query, suggestionObj) {\r\n      if (suggestionObj) {\r\n         return suggestionObj.code + \" - \" + suggestionObj.configSlotCode + \" - \" + suggestionObj.name;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Wrapper to enable our OK button\r\n    */\r\n   enableOkBtn() {\r\n      if (this.okBtnEl) {\r\n         if (this.okBtnEl.attr('originOnClickEvent')) {\r\n            this.okBtnEl.attr('onclick', this.okBtnEl.attr('originOnClickEvent'));\r\n         }\r\n\r\n         if (this.okBtnEl.attr('originTitle')) {\r\n            this.okBtnEl.attr('title', this.okBtnEl.attr('originTitle'));\r\n         }\r\n\r\n         this.okBtnEl.removeClass('disabled');\r\n         this.okBtnEl.removeAttr('disabled');\r\n         this.okBtnEl.removeAttr('originOnClickEvent');\r\n         this.okBtnEl.removeAttr('originTitle');\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Wrapper to disable our OK button\r\n    */\r\n   disableOkBtn() {\r\n      if (this.okBtnEl) {\r\n         // store the button onclick handler and title for future restore\r\n         if (!this.okBtnEl.attr('originOnClickEvent')) {\r\n            this.okBtnEl.attr('originOnClickEvent', this.okBtnEl.attr('onclick'));\r\n         }\r\n\r\n         if (!this.okBtnEl.attr('originTitle')) {\r\n            this.okBtnEl.attr('originTitle', this.okBtnEl.attr('title'));\r\n         }\r\n\r\n         this.okBtnEl.addClass('disabled');\r\n         this.okBtnEl.attr('disabled', 'disabled');\r\n         this.okBtnEl.attr('onclick', false);\r\n         this.okBtnEl.attr('title', '');\r\n      }\r\n   }\r\n\r\n}\r\n","/* global expect, jasmine, spyOn, $, setFixtures */\r\n/**\r\n * Create Follow-on Task Search Test Suite\r\n **/\r\n \r\nimport $ from 'jquery';\r\nimport FollowOnTaskDefinitionSearchController from './followOnTaskDefinitionSearchController.js';\r\n\r\ndescribe('FollowOnTaskDefinitionSearchController followOnTask/followOnTaskDefinitionSearchController.js', function() {\r\n   let restApiUrl = \"/someRestApi\";\r\n\r\n   function getGoodController() {\r\n      return new FollowOnTaskDefinitionSearchController('followOnTaskSearchQuery',\r\n         'idButtonOk',\r\n         'idTypeaheadNotFoundMessage',\r\n         'idFieldFollowOnTaskDefnUuid',\r\n         'idfollowOnTaskDefinitionRestAPI');\r\n   }\r\n\r\n   function setUpHTMLFixture() {\r\n      setFixtures(\r\n         '<form id=\"form-typeahead-test\" name=\"form-typeahead-test\">' +\r\n         '  <div class=\"typeahead__container\">' +\r\n         '     <div class=\"typeahead__field\">' +\r\n         '        <span class=\"typeahead__query\">' +\r\n         '          <input class= \"js-typeahead-test\" id=\"followOnTaskSearchQuery\" name=\"followOnTaskSearchQuery\">' +\r\n         '        </span>' +\r\n         '     </div>' +\r\n         '  </div>' +\r\n         '  <button id=\"idButtonOk\" title=\"mytitle\">Ok</button>' +\r\n         '  <input type=\"hidden\" name=\"aFollowOnTaskDefinitionUuid\" id=\"idFieldFollowOnTaskDefnUuid\">' +\r\n         '  <input type=\"hidden\" id=\"idTypeaheadNotFoundMessage\" value=\"web.msg.MSG_NO_MATCHING_FOLLOWON_TASK_DEFINITIONS\">' +\r\n         '  <input type=\"hidden\" id=\"idfollowOnTaskDefinitionRestAPI\" value=\"' + restApiUrl + '\"' +\r\n         '</form>');\r\n   }\r\n\r\n   beforeEach(function() {\r\n      jasmine.Ajax.install();\r\n      setUpHTMLFixture();\r\n      this.okButtonEl = $('#idButtonOk');\r\n      this.fieldFollowOnTaskDefnUuidEl = $('#idFieldFollowOnTaskDefnUuid');\r\n   });\r\n\r\n   afterEach(function() {\r\n      jasmine.Ajax.uninstall();\r\n   });\r\n\r\n   it(\"Should have a button with OK label\", function() {\r\n      expect(this.okButtonEl).toHaveText(\"Ok\");\r\n   });\r\n\r\n   it(\"Should throw error indicating missing typeaheadId\", function() {\r\n\r\n      expect(function() {\r\n         new FollowOnTaskDefinitionSearchController('FAKE_followOnTaskSearchQuery',\r\n            'FAKE_idButtonOk',\r\n            'FAKE_idTypeaheadNotFoundMessage',\r\n            'FAKE_idFieldFollowOnTaskDefnUuid',\r\n            'FAKE_idfollowOnTaskDefinitionRestAPI');\r\n      }).toThrow();\r\n   });\r\n\r\n   it(\"Should have Ok button enabled\", function() {\r\n      let controller = getGoodController();\r\n      controller.enableOkBtn();\r\n      expect(this.okButtonEl).not.toHaveClass('disabled');\r\n   });\r\n\r\n   it(\"Should have Ok button disabled\", function() {\r\n      let controller = getGoodController();\r\n      controller.disableOkBtn();\r\n      expect(this.okButtonEl).toHaveClass('disabled');\r\n   });\r\n\r\n\r\n   it('returns a properly constructed display value', function() {\r\n      let data = [{\r\n         code: 5,\r\n         configSlotCode: 3,\r\n         name: 'test'\r\n      }];\r\n\r\n      let controller = getGoodController();\r\n      expect(controller.displayFollowOn(null, data[0])).toBe(\"5 - 3 - test\");\r\n   });\r\n\r\n   it(\"Should set and clear selected task definition of output element\", function() {\r\n      let controller = getGoodController();\r\n      controller.setSelectedTaskDefinition({ id: 'someValue' });\r\n      expect(this.fieldFollowOnTaskDefnUuidEl.attr('value')).toBe('someValue');\r\n\r\n      controller.clearSelectedTaskDefinition();\r\n      expect(this.fieldFollowOnTaskDefnUuidEl.attr('value')).toBe('');\r\n   });\r\n\r\n   it('Fetches task definitions successfully', function(done) {\r\n      let controller = getGoodController();\r\n      let responseTaskDefinitions = [\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD5\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact1\", \"code\": \"NC14992-REQ1\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD6\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact2\", \"code\": \"NC14992-REQ2\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD7\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact3\", \"code\": \"NC14992-REQ3\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD8\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact4\", \"code\": \"NC14992-REQ4\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCD9\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact5\", \"code\": \"NC14992-REQ5\" },\r\n         { \"id\": \"A6AAE18B638740B29B2F34D51CF2CCE3\", \"configSlotCode\": \"BOM123\", \"name\": \"ReqWithImpact6\", \"code\": \"NC14992-REQ6\" },\r\n      ];\r\n\r\n      spyOn($, 'ajax').and.callFake(function(e) {\r\n         return e.success(responseTaskDefinitions);\r\n      });\r\n\r\n      let okButtonEl = $('#idButtonOk');\r\n      let nativeEl = $(\"#followOnTaskSearchQuery\");\r\n\r\n      // initialize controller\r\n      try {\r\n      controller.initialize().then(function() {\r\n         // check to see if ajax was done with proper url\r\n         expect($.ajax.calls.mostRecent().args[0].url).toEqual(restApiUrl);\r\n\r\n         // check if ok button was disabled\r\n         expect(okButtonEl).toHaveClass('disabled');\r\n\r\n         // check if focus was given to component\r\n         expect(nativeEl).toBeFocused();\r\n         done();\r\n      });\r\n      } catch (e) {\r\n         console.error(\"error: \", e);\r\n      }\r\n\r\n   });\r\n\r\n});\r\n"],"sourceRoot":""}